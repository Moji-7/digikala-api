{
    "sourceFile": "src/hamechidun/proccessing/hamechidun-process.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1706085526152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706085670026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n   // orders-grouping.provider.ts\r\n import { Injectable } from '@nestjs/common';\r\n \r\n @Injectable()\r\n-export const orders_grouping_by_categories_2_3 = (\r\n+export const OrdersGroupingByCategories23  = (\r\n   data,\r\n   categoryField,\r\n   is_item_category3,\r\n ) => {\r\n"
                },
                {
                    "date": 1706085702233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n   // orders-grouping.provider.ts\r\n import { Injectable } from '@nestjs/common';\r\n \r\n @Injectable()\r\n-export const OrdersGroupingByCategories23  = (\r\n+export class OrdersGroupingByCategories23  = (\r\n   data,\r\n   categoryField,\r\n   is_item_category3,\r\n ) => {\r\n"
                },
                {
                    "date": 1706085866975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,10 @@\n   // orders-grouping.provider.ts\r\n import { Injectable } from '@nestjs/common';\r\n \r\n @Injectable()\r\n-export class OrdersGroupingByCategories23  = (\r\n+export class processingService {\r\n+public OrdersGroupingByCategories23  = (\r\n   data,\r\n   categoryField,\r\n   is_item_category3,\r\n ) => {\r\n"
                },
                {
                    "date": 1706085907676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n   // orders-grouping.provider.ts\r\n import { Injectable } from '@nestjs/common';\r\n \r\n @Injectable()\r\n-export class processingService {\r\n+export class ProcessingService {\r\n public OrdersGroupingByCategories23  = (\r\n   data,\r\n   categoryField,\r\n   is_item_category3,\r\n@@ -29,5 +29,6 @@\n       },\r\n     };\r\n   }, R.values(groupedData));\r\n   return result;\r\n+}\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706086091569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n \r\n   // orders-grouping.provider.ts\r\n import { Injectable } from '@nestjs/common';\r\n+const R = require('ramda');\r\n \r\n @Injectable()\r\n export class ProcessingService {\r\n public OrdersGroupingByCategories23  = (\r\n"
                }
            ],
            "date": 1706085526152,
            "name": "Commit-0",
            "content": "\r\n  // orders-grouping.provider.ts\r\nimport { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport const orders_grouping_by_categories_2_3 = (\r\n  data,\r\n  categoryField,\r\n  is_item_category3,\r\n) => {\r\n  const groupedData = R.groupBy(R.prop(categoryField), data);\r\n  const result = R.map((group) => {\r\n    const categoryTitle = R.head(group)[categoryField];\r\n    const parentCategory = is_item_category3\r\n      ? R.head(group)['item_category2']\r\n      : null;\r\n    return {\r\n      category: {\r\n        name: categoryField,\r\n        title: categoryTitle,\r\n        parent: parentCategory,\r\n        count: R.sum(R.pluck('count', group)),\r\n        max_price: R.apply(Math.max, R.pluck('max_price', group)),\r\n        avg_price: Math.round(R.mean(R.pluck('avg_price', group))),\r\n        total_price: R.sum(R.pluck('total_price', group)),\r\n        avg_discount: Math.round(R.mean(R.pluck('avg_discount', group))),\r\n        childs: [],\r\n      },\r\n    };\r\n  }, R.values(groupedData));\r\n  return result;\r\n}"
        }
    ]
}