{
    "sourceFile": "src/hamechidun/incredibles.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1706087230074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706087423008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { Injectable } from '@nestjs/common';\r\n import { InjectRepository } from '@nestjs/typeorm';\r\n import { Repository } from 'typeorm';\r\n import { IncrediblesEntity } from './entity/Incredibles';\r\n+import { ProductEntity } from './entity/product.entity';\r\n \r\n @Injectable()\r\n export class IncrediblesService {\r\n   constructor(\r\n@@ -13,6 +14,24 @@\n \r\n   async findAll(): Promise<IncrediblesEntity[]> {\r\n     return this.incrediblesRepository.find();\r\n   }\r\n-  \r\n+    // create a new method to perform the join query\r\n+    async findWithProducts(): Promise<any[]> {\r\n+      return this.incrediblesRepository\r\n+        .createQueryBuilder('incredibles') // create a query builder with an alias\r\n+        .select([\r\n+          'incredibles.id AS Incredibles_ID',\r\n+          'incredibles.selling_price AS Incredibles_Selling_Price',\r\n+          'products.selling_price AS Products_Selling_Price',\r\n+        ]) // select the columns you want to retrieve\r\n+        .innerJoin(\r\n+          ProductEntity,\r\n+          'products',\r\n+          'incredibles.id = products.product_id',\r\n+        ) // perform an inner join with the ProductEntity and the join condition\r\n+        .orderBy('incredibles.id') // order by incredibles.id\r\n+        .getRawMany(); // execute the query and get the raw results\r\n+    }\r\n+  }\r\n+\r\n }\r\n"
                },
                {
                    "date": 1706087876494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   async findAll(): Promise<IncrediblesEntity[]> {\r\n     return this.incrediblesRepository.find();\r\n   }\r\n     // create a new method to perform the join query\r\n-    async findWithProducts(): Promise<any[]> {\r\n+    async findWithProducts(productId: number): Promise<any[]> {\r\n       return this.incrediblesRepository\r\n         .createQueryBuilder('incredibles') // create a query builder with an alias\r\n         .select([\r\n           'incredibles.id AS Incredibles_ID',\r\n@@ -29,9 +29,9 @@\n           'products',\r\n           'incredibles.id = products.product_id',\r\n         ) // perform an inner join with the ProductEntity and the join condition\r\n         .orderBy('incredibles.id') // order by incredibles.id\r\n+        .where('incredibles.id = :product_id', { product_id: productId });\r\n         .getRawMany(); // execute the query and get the raw results\r\n     }\r\n   }\r\n \r\n-}\r\n"
                },
                {
                    "date": 1706092087687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   async findAll(): Promise<IncrediblesEntity[]> {\r\n     return this.incrediblesRepository.find();\r\n   }\r\n     // create a new method to perform the join query\r\n-    async findWithProducts(productId: number): Promise<any[]> {\r\n+    async findWithProducts(productId: number): Promise<IIncrediblesWithProducts[]> {\r\n       return this.incrediblesRepository\r\n         .createQueryBuilder('incredibles') // create a query builder with an alias\r\n         .select([\r\n           'incredibles.id AS Incredibles_ID',\r\n@@ -29,9 +29,9 @@\n           'products',\r\n           'incredibles.id = products.product_id',\r\n         ) // perform an inner join with the ProductEntity and the join condition\r\n         .orderBy('incredibles.id') // order by incredibles.id\r\n-        .where('incredibles.id = :product_id', { product_id: productId });\r\n+        .where('incredibles.id = :product_id', { product_id: productId })\r\n         .getRawMany(); // execute the query and get the raw results\r\n     }\r\n   }\r\n \r\n"
                },
                {
                    "date": 1706092165206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   async findAll(): Promise<IncrediblesEntity[]> {\r\n     return this.incrediblesRepository.find();\r\n   }\r\n     // create a new method to perform the join query\r\n-    async findWithProducts(productId: number): Promise<IIncrediblesWithProducts[]> {\r\n+    async findWithProducts(productId: number): Promise<any[]> {\r\n       return this.incrediblesRepository\r\n         .createQueryBuilder('incredibles') // create a query builder with an alias\r\n         .select([\r\n           'incredibles.id AS Incredibles_ID',\r\n"
                },
                {
                    "date": 1706093888934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n           'products',\r\n           'incredibles.id = products.product_id',\r\n         ) // perform an inner join with the ProductEntity and the join condition\r\n         .orderBy('incredibles.id') // order by incredibles.id\r\n-        .where('incredibles.id = :product_id', { product_id: productId })\r\n+        .where(productId ? 'incredibles.id = :product_id' : '1=1', { product_id: productId });\r\n         .getRawMany(); // execute the query and get the raw results\r\n     }\r\n   }\r\n \r\n"
                },
                {
                    "date": 1706094694914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,16 +22,17 @@\n         .select([\r\n           'incredibles.id AS Incredibles_ID',\r\n           'incredibles.selling_price AS Incredibles_Selling_Price',\r\n           'products.selling_price AS Products_Selling_Price',\r\n+          'products.discount_percent AS Products_discount_percent',\r\n         ]) // select the columns you want to retrieve\r\n         .innerJoin(\r\n           ProductEntity,\r\n           'products',\r\n           'incredibles.id = products.product_id',\r\n         ) // perform an inner join with the ProductEntity and the join condition\r\n         .orderBy('incredibles.id') // order by incredibles.id\r\n-        .where(productId ? 'incredibles.id = :product_id' : '1=1', { product_id: productId });\r\n+        .where(productId ? 'incredibles.id = :product_id' : '1=1', { product_id: productId })\r\n         .getRawMany(); // execute the query and get the raw results\r\n     }\r\n   }\r\n \r\n"
                },
                {
                    "date": 1706094720132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n           'incredibles.id AS Incredibles_ID',\r\n           'incredibles.selling_price AS Incredibles_Selling_Price',\r\n           'products.selling_price AS Products_Selling_Price',\r\n           'products.discount_percent AS Products_discount_percent',\r\n+          'products.seller_title AS Products_seller_title',\r\n         ]) // select the columns you want to retrieve\r\n         .innerJoin(\r\n           ProductEntity,\r\n           'products',\r\n"
                },
                {
                    "date": 1706094757717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n           'incredibles.selling_price AS Incredibles_Selling_Price',\r\n           'products.selling_price AS Products_Selling_Price',\r\n           'products.discount_percent AS Products_discount_percent',\r\n           'products.seller_title AS Products_seller_title',\r\n+          'products.seller_id AS Products_`seller_id',\r\n         ]) // select the columns you want to retrieve\r\n         .innerJoin(\r\n           ProductEntity,\r\n           'products',\r\n"
                },
                {
                    "date": 1706096391041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,14 @@\n         .createQueryBuilder('incredibles') // create a query builder with an alias\r\n         .select([\r\n           'incredibles.id AS Incredibles_ID',\r\n           'incredibles.selling_price AS Incredibles_Selling_Price',\r\n+             'incredibles.seller_title AS Incredibles_Selling_Price',\r\n+             'incredibles.seller_id AS Incredibles_Selling_Price',\r\n           'products.selling_price AS Products_Selling_Price',\r\n           'products.discount_percent AS Products_discount_percent',\r\n           'products.seller_title AS Products_seller_title',\r\n-          'products.seller_id AS Products_`seller_id',\r\n+          'products.seller_id AS Products_seller_id',\r\n         ]) // select the columns you want to retrieve\r\n         .innerJoin(\r\n           ProductEntity,\r\n           'products',\r\n"
                },
                {
                    "date": 1706096430830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,10 @@\n         .createQueryBuilder('incredibles') // create a query builder with an alias\r\n         .select([\r\n           'incredibles.id AS Incredibles_ID',\r\n           'incredibles.selling_price AS Incredibles_Selling_Price',\r\n-             'incredibles.seller_title AS Incredibles_Selling_Price',\r\n-             'incredibles.seller_id AS Incredibles_Selling_Price',\r\n+             'incredibles.seller_title AS Incredibles_Seller_Title',\r\n+             'incredibles.seller_id AS Incredibles_Seller_Id',\r\n           'products.selling_price AS Products_Selling_Price',\r\n           'products.discount_percent AS Products_discount_percent',\r\n           'products.seller_title AS Products_seller_title',\r\n           'products.seller_id AS Products_seller_id',\r\n"
                },
                {
                    "date": 1706099474103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,10 @@\n     async findWithProducts(productId: number): Promise<any[]> {\r\n       return this.incrediblesRepository\r\n         .createQueryBuilder('incredibles') // create a query builder with an alias\r\n         .select([\r\n-          'incredibles.id AS Incredibles_ID',\r\n-          'incredibles.selling_price AS Incredibles_Selling_Price',\r\n+          'incredibles.id AS inc_id',\r\n+          'incredibles.selling_price AS inc_min_price_in_last_month',\r\n              'incredibles.seller_title AS Incredibles_Seller_Title',\r\n              'incredibles.seller_id AS Incredibles_Seller_Id',\r\n           'products.selling_price AS Products_Selling_Price',\r\n           'products.discount_percent AS Products_discount_percent',\r\n"
                },
                {
                    "date": 1706099490121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,10 @@\n         .createQueryBuilder('incredibles') // create a query builder with an alias\r\n         .select([\r\n           'incredibles.id AS inc_id',\r\n           'incredibles.selling_price AS inc_min_price_in_last_month',\r\n-             'incredibles.seller_title AS Incredibles_Seller_Title',\r\n-             'incredibles.seller_id AS Incredibles_Seller_Id',\r\n+             'incredibles.seller_title AS inc_selling_price',\r\n+             'incredibles.seller_id AS inc_discount_percent',\r\n           'products.selling_price AS Products_Selling_Price',\r\n           'products.discount_percent AS Products_discount_percent',\r\n           'products.seller_title AS Products_seller_title',\r\n           'products.seller_id AS Products_seller_id',\r\n"
                },
                {
                    "date": 1706099536579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,11 @@\n           'incredibles.id AS inc_id',\r\n           'incredibles.selling_price AS inc_min_price_in_last_month',\r\n              'incredibles.seller_title AS inc_selling_price',\r\n              'incredibles.seller_id AS inc_discount_percent',\r\n+             'incredibles.inc_rrp_price AS inc_rrp_price',\r\n+             'incredibles.inc_seller_title AS inc_seller_title',\r\n+             'incredibles.inc_seller_id AS inc_seller_id',\r\n           'products.selling_price AS Products_Selling_Price',\r\n           'products.discount_percent AS Products_discount_percent',\r\n           'products.seller_title AS Products_seller_title',\r\n           'products.seller_id AS Products_seller_id',\r\n"
                },
                {
                    "date": 1706099577449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,32 +14,33 @@\n \r\n   async findAll(): Promise<IncrediblesEntity[]> {\r\n     return this.incrediblesRepository.find();\r\n   }\r\n-    // create a new method to perform the join query\r\n-    async findWithProducts(productId: number): Promise<any[]> {\r\n-      return this.incrediblesRepository\r\n-        .createQueryBuilder('incredibles') // create a query builder with an alias\r\n-        .select([\r\n-          'incredibles.id AS inc_id',\r\n-          'incredibles.selling_price AS inc_min_price_in_last_month',\r\n-             'incredibles.seller_title AS inc_selling_price',\r\n-             'incredibles.seller_id AS inc_discount_percent',\r\n-             'incredibles.inc_rrp_price AS inc_rrp_price',\r\n-             'incredibles.inc_seller_title AS inc_seller_title',\r\n-             'incredibles.inc_seller_id AS inc_seller_id',\r\n-          'products.selling_price AS Products_Selling_Price',\r\n-          'products.discount_percent AS Products_discount_percent',\r\n-          'products.seller_title AS Products_seller_title',\r\n-          'products.seller_id AS Products_seller_id',\r\n-        ]) // select the columns you want to retrieve\r\n-        .innerJoin(\r\n-          ProductEntity,\r\n-          'products',\r\n-          'incredibles.id = products.product_id',\r\n-        ) // perform an inner join with the ProductEntity and the join condition\r\n-        .orderBy('incredibles.id') // order by incredibles.id\r\n-        .where(productId ? 'incredibles.id = :product_id' : '1=1', { product_id: productId })\r\n-        .getRawMany(); // execute the query and get the raw results\r\n-    }\r\n+  // create a new method to perform the join query\r\n+  async findWithProducts(productId: number): Promise<any[]> {\r\n+    return this.incrediblesRepository\r\n+      .createQueryBuilder('incredibles') // create a query builder with an alias\r\n+      .select([\r\n+        'incredibles.id AS inc_id',\r\n+        'incredibles.selling_price AS inc_min_price_in_last_month',\r\n+        'incredibles.seller_title AS inc_selling_price',\r\n+        'incredibles.seller_id AS inc_discount_percent',\r\n+        'incredibles.inc_rrp_price AS inc_rrp_price',\r\n+        'incredibles.inc_seller_title AS inc_seller_title',\r\n+        'incredibles.inc_seller_id AS inc_seller_id',\r\n+        'products.selling_price AS Products_Selling_Price',\r\n+        'products.discount_percent AS Products_discount_percent',\r\n+        'products.seller_title AS Products_seller_title',\r\n+        'products.seller_id AS Products_seller_id',\r\n+      ]) // select the columns you want to retrieve\r\n+      .innerJoin(\r\n+        ProductEntity,\r\n+        'products',\r\n+        'incredibles.id = products.product_id',\r\n+      ) // perform an inner join with the ProductEntity and the join condition\r\n+      .orderBy('incredibles.id') // order by incredibles.id\r\n+      .where(productId ? 'incredibles.id = :product_id' : '1=1', {\r\n+        product_id: productId,\r\n+      })\r\n+      .getRawMany(); // execute the query and get the raw results\r\n   }\r\n-\r\n+}\r\n"
                },
                {
                    "date": 1706099610407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,12 +26,12 @@\n         'incredibles.seller_id AS inc_discount_percent',\r\n         'incredibles.inc_rrp_price AS inc_rrp_price',\r\n         'incredibles.inc_seller_title AS inc_seller_title',\r\n         'incredibles.inc_seller_id AS inc_seller_id',\r\n-        'products.selling_price AS Products_Selling_Price',\r\n-        'products.discount_percent AS Products_discount_percent',\r\n-        'products.seller_title AS Products_seller_title',\r\n-        'products.seller_id AS Products_seller_id',\r\n+        'products.selling_price AS product_selling_price',\r\n+        'products.discount_percent AS Product_discount_percent',\r\n+        'products.seller_title AS Product_seller_title',\r\n+        'products.seller_id AS Product_seller_id',\r\n       ]) // select the columns you want to retrieve\r\n       .innerJoin(\r\n         ProductEntity,\r\n         'products',\r\n"
                },
                {
                    "date": 1706099670753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,13 +23,14 @@\n         'incredibles.id AS inc_id',\r\n         'incredibles.selling_price AS inc_min_price_in_last_month',\r\n         'incredibles.seller_title AS inc_selling_price',\r\n         'incredibles.seller_id AS inc_discount_percent',\r\n-        'incredibles.inc_rrp_price AS inc_rrp_price',\r\n-        'incredibles.inc_seller_title AS inc_seller_title',\r\n-        'incredibles.inc_seller_id AS inc_seller_id',\r\n+        'incredibles.rrp_price AS inc_rrp_price',\r\n+        'incredibles.seller_title AS inc_seller_title',\r\n+        'incredibles.seller_id AS inc_seller_id',\r\n         'products.selling_price AS product_selling_price',\r\n         'products.discount_percent AS Product_discount_percent',\r\n+        'products.rrp_price AS Product_inc_rrp_price',\r\n         'products.seller_title AS Product_seller_title',\r\n         'products.seller_id AS Product_seller_id',\r\n       ]) // select the columns you want to retrieve\r\n       .innerJoin(\r\n"
                },
                {
                    "date": 1706099968925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   async findAll(): Promise<IncrediblesEntity[]> {\r\n     return this.incrediblesRepository.find();\r\n   }\r\n   // create a new method to perform the join query\r\n-  async findWithProducts(productId: number): Promise<any[]> {\r\n+  async findWithProducts(productId: number): Promise<IIncrediblesWithProducts[]> {\r\n     return this.incrediblesRepository\r\n       .createQueryBuilder('incredibles') // create a query builder with an alias\r\n       .select([\r\n         'incredibles.id AS inc_id',\r\n"
                },
                {
                    "date": 1706100975782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n     return this.incrediblesRepository\r\n       .createQueryBuilder('incredibles') // create a query builder with an alias\r\n       .select([\r\n         'incredibles.id AS inc_id',\r\n-        'incredibles.selling_price AS inc_min_price_in_last_month',\r\n-        'incredibles.seller_title AS inc_selling_price',\r\n+        'incredibles.min_price_in_last_month AS inc_min_price_in_last_month',\r\n+        'incredibles.selling_price AS inc_selling_price',\r\n         'incredibles.seller_id AS inc_discount_percent',\r\n         'incredibles.rrp_price AS inc_rrp_price',\r\n         'incredibles.seller_title AS inc_seller_title',\r\n         'incredibles.seller_id AS inc_seller_id',\r\n"
                },
                {
                    "date": 1706101107889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,11 @@\n   async findWithProducts(productId: number): Promise<IIncrediblesWithProducts[]> {\r\n     return this.incrediblesRepository\r\n       .createQueryBuilder('incredibles') // create a query builder with an alias\r\n       .select([\r\n-        'incredibles.id AS inc_id',\r\n-        'incredibles.min_price_in_last_month AS inc_min_price_in_last_month',\r\n-        'incredibles.selling_price AS inc_selling_price',\r\n+        'incredibles.id AS id',\r\n+        'incredibles.min_price_in_last_month AS min_price_in_last_month',\r\n+        'incredibles.selling_price AS selling_price',\r\n         'incredibles.seller_id AS inc_discount_percent',\r\n         'incredibles.rrp_price AS inc_rrp_price',\r\n         'incredibles.seller_title AS inc_seller_title',\r\n         'incredibles.seller_id AS inc_seller_id',\r\n"
                },
                {
                    "date": 1706101147632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,11 @@\n       .select([\r\n         'incredibles.id AS id',\r\n         'incredibles.min_price_in_last_month AS min_price_in_last_month',\r\n         'incredibles.selling_price AS selling_price',\r\n-        'incredibles.seller_id AS inc_discount_percent',\r\n-        'incredibles.rrp_price AS inc_rrp_price',\r\n-        'incredibles.seller_title AS inc_seller_title',\r\n+        'incredibles.seller_id AS discount_percent',\r\n+        'incredibles.rrp_price AS rrp_price',\r\n+        'incredibles.seller_title AS seller_title',\r\n         'incredibles.seller_id AS inc_seller_id',\r\n         'products.selling_price AS product_selling_price',\r\n         'products.discount_percent AS Product_discount_percent',\r\n         'products.rrp_price AS Product_inc_rrp_price',\r\n"
                },
                {
                    "date": 1706101165984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,10 @@\n         'incredibles.min_price_in_last_month AS min_price_in_last_month',\r\n         'incredibles.selling_price AS selling_price',\r\n         'incredibles.seller_id AS discount_percent',\r\n         'incredibles.rrp_price AS rrp_price',\r\n+        'incredibles.seller_id AS inc_seller_id',\r\n         'incredibles.seller_title AS seller_title',\r\n-        'incredibles.seller_id AS inc_seller_id',\r\n         'products.selling_price AS product_selling_price',\r\n         'products.discount_percent AS Product_discount_percent',\r\n         'products.rrp_price AS Product_inc_rrp_price',\r\n         'products.seller_title AS Product_seller_title',\r\n"
                },
                {
                    "date": 1706101233152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         'incredibles.seller_id AS inc_seller_id',\r\n         'incredibles.seller_title AS seller_title',\r\n         'products.selling_price AS product_selling_price',\r\n         'products.discount_percent AS Product_discount_percent',\r\n-        'products.rrp_price AS Product_inc_rrp_price',\r\n+        'products.rrp_price AS Product_rrp_price',\r\n         'products.seller_title AS Product_seller_title',\r\n         'products.seller_id AS Product_seller_id',\r\n       ]) // select the columns you want to retrieve\r\n       .innerJoin(\r\n"
                },
                {
                    "date": 1706101243601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n         'incredibles.seller_title AS seller_title',\r\n         'products.selling_price AS product_selling_price',\r\n         'products.discount_percent AS Product_discount_percent',\r\n         'products.rrp_price AS Product_rrp_price',\r\n+        'products.seller_id AS Product_seller_id',\r\n         'products.seller_title AS Product_seller_title',\r\n-        'products.seller_id AS Product_seller_id',\r\n       ]) // select the columns you want to retrieve\r\n       .innerJoin(\r\n         ProductEntity,\r\n         'products',\r\n"
                },
                {
                    "date": 1706101420601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n   async findAll(): Promise<IncrediblesEntity[]> {\r\n     return this.incrediblesRepository.find();\r\n   }\r\n   // create a new method to perform the join query\r\n-  async findWithProducts(productId: number): Promise<IIncrediblesWithProducts[]> {\r\n+  async findWithProducts(productId: number): Promise<any[]> {\r\n     return this.incrediblesRepository\r\n       .createQueryBuilder('incredibles') // create a query builder with an alias\r\n       .select([\r\n         'incredibles.id AS id',\r\n"
                },
                {
                    "date": 1706102533543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,11 @@\n         'incredibles.rrp_price AS rrp_price',\r\n         'incredibles.seller_id AS inc_seller_id',\r\n         'incredibles.seller_title AS seller_title',\r\n         'products.selling_price AS product_selling_price',\r\n-        'products.discount_percent AS Product_discount_percent',\r\n-        'products.rrp_price AS Product_rrp_price',\r\n-        'products.seller_id AS Product_seller_id',\r\n+        'products.discount_percent AS product_discount_percent',\r\n+        'products.rrp_price AS product_rrp_price',\r\n+        'products.seller_id AS product_seller_id',\r\n         'products.seller_title AS Product_seller_title',\r\n       ]) // select the columns you want to retrieve\r\n       .innerJoin(\r\n         ProductEntity,\r\n"
                },
                {
                    "date": 1706102547689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n         'products.selling_price AS product_selling_price',\r\n         'products.discount_percent AS product_discount_percent',\r\n         'products.rrp_price AS product_rrp_price',\r\n         'products.seller_id AS product_seller_id',\r\n-        'products.seller_title AS Product_seller_title',\r\n+        'products.seller_title AS product_seller_title',\r\n       ]) // select the columns you want to retrieve\r\n       .innerJoin(\r\n         ProductEntity,\r\n         'products',\r\n"
                }
            ],
            "date": 1706087230074,
            "name": "Commit-0",
            "content": "// Incredibles Service in Nest.js\r\nimport { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { IncrediblesEntity } from './entity/Incredibles';\r\n\r\n@Injectable()\r\nexport class IncrediblesService {\r\n  constructor(\r\n    @InjectRepository(IncrediblesEntity)\r\n    private incrediblesRepository: Repository<IncrediblesEntity>,\r\n  ) {}\r\n\r\n  async findAll(): Promise<IncrediblesEntity[]> {\r\n    return this.incrediblesRepository.find();\r\n  }\r\n  \r\n}\r\n"
        }
    ]
}