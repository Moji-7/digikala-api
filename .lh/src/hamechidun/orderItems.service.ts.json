{
    "sourceFile": "src/hamechidun/orderItems.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 142,
            "patches": [
                {
                    "date": 1704628588208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704628676754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,26 @@\n-\r\n-\r\n-\r\n-\r\n import { Injectable, Logger } from '@nestjs/common';\r\n import { InjectRepository } from '@nestjs/typeorm';\r\n import { MoreThan, Repository } from 'typeorm';\r\n-import { O } from './entity/OrderItem'; // Replace with your entity model\r\n-import { PopulateOrderProductPriceExpensive, PopulateOrdersProductsMost, PopulateOrdersSellersMost, PopulateOrdersSummary, populateOrdersProductsCategoriesInfo } from './entity/entityAll';\r\n+import { OrderItem } from './entity/OrderItem'; // Replace with your entity model\r\n+import {\r\n+  PopulateOrderProductPriceExpensive,\r\n+  PopulateOrdersProductsMost,\r\n+  PopulateOrdersSellersMost,\r\n+  PopulateOrdersSummary,\r\n+  populateOrdersProductsCategoriesInfo,\r\n+} from './entity/entityAll';\r\n \r\n-\r\n-\r\n @Injectable()\r\n export class HamechidunService {\r\n   constructor(\r\n-    @InjectRepository(TopSellingProduct)\r\n-    private readonly topSellingProductRepository: Repository<OrderItem>\r\n+    @InjectRepository(OrderItem)\r\n+    private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n-const result = await this.orderItemRepository.query(\r\n-    `SELECT \r\n+\r\n+  async get_orderItems(): Promise<OrderItem[]> {\r\n+    const orderItems = await this.orderItemRepository.query(\r\n+      `SELECT \r\n       jt.id AS order_item_id,\r\n       jt.quantity AS order_item_quantity,\r\n       jt.product_id AS product_id,\r\n       jt.title_fa AS product_title_fa,\r\n@@ -76,6 +78,10 @@\n                seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n                seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n            )\r\n        ) AS jt;`,\r\n-    { mapToEntity: OrderItem },\r\n-  );\n\\ No newline at end of file\n+      { mapToEntity: OrderItem },\r\n+    );\r\n+\r\n+    return orderItems;\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1704628691403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n                seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n                seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n            )\r\n        ) AS jt;`,\r\n-      { mapToEntity: OrderItem },\r\n+     // { mapToEntity: OrderItem },\r\n     );\r\n \r\n     return orderItems;\r\n   }\r\n"
                },
                {
                    "date": 1704628775637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n   populateOrdersProductsCategoriesInfo,\r\n } from './entity/entityAll';\r\n \r\n @Injectable()\r\n-export class HamechidunService {\r\n+export class OrderItemService {\r\n   constructor(\r\n     @InjectRepository(OrderItem)\r\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n"
                },
                {
                    "date": 1704628891111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,10 @@\n import { Injectable, Logger } from '@nestjs/common';\r\n import { InjectRepository } from '@nestjs/typeorm';\r\n import { MoreThan, Repository } from 'typeorm';\r\n-import { OrderItem } from './entity/OrderItem'; // Replace with your entity model\r\n-import {\r\n-  PopulateOrderProductPriceExpensive,\r\n-  PopulateOrdersProductsMost,\r\n-  PopulateOrdersSellersMost,\r\n-  PopulateOrdersSummary,\r\n-  populateOrdersProductsCategoriesInfo,\r\n-} from './entity/entityAll';\r\n+import { OrderItem } from './entity/OrderItem';\r\n \r\n+\r\n @Injectable()\r\n export class OrderItemService {\r\n   constructor(\r\n     @InjectRepository(OrderItem)\r\n"
                },
                {
                    "date": 1704629148110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,76 +6,76 @@\n \r\n @Injectable()\r\n export class OrderItemService {\r\n   constructor(\r\n-    @InjectRepository(OrderItem)\r\n-    private readonly orderItemRepository: Repository<OrderItem>,\r\n+    // @InjectRepository(OrderItem)\r\n+    // private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n   async get_orderItems(): Promise<OrderItem[]> {\r\n-    const orderItems = await this.orderItemRepository.query(\r\n-      `SELECT \r\n-      jt.id AS order_item_id,\r\n-      jt.quantity AS order_item_quantity,\r\n-      jt.product_id AS product_id,\r\n-      jt.title_fa AS product_title_fa,\r\n-      jt.title_en AS product_title_en,\r\n-      jt.url_uri AS product_url_uri,\r\n-      jt.status AS product_status,\r\n-      jt.brand AS product_brand,\r\n-      jt.category AS product_category,\r\n-      jt.dimension20 AS product_dimension20,\r\n-      jt.item_category2 AS product_item_category2,\r\n-      jt.item_category3 AS product_item_category3,\r\n-      jt.storage_ids AS product_image_storage_ids,\r\n-      jt.url AS product_image_url,\r\n-      jt.rrp_price AS price_rrp_price,\r\n-      jt.selling_price AS price_selling_price,\r\n-      jt.discount_percent AS price_discount_percent,\r\n-      jt.is_incredible AS price_is_incredible,\r\n-      jt.is_promotion AS price_is_promotion,\r\n-      jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n-      jt.bnpl_active AS price_bnpl_active,\r\n-      jt.variant_id AS variant_id,\r\n-      jt.seller_id AS seller_id,\r\n-      jt.seller_title AS seller_title,\r\n-      jt.seller_code AS seller_code,\r\n-      jt.seller_url AS seller_url\r\n-  FROM orders,\r\n-       JSON_TABLE(\r\n-           order_content,\r\n-           '$.order_item[*]'\r\n-           COLUMNS (\r\n-               id INT PATH '$.id',\r\n-               quantity INT PATH '$.quantity',\r\n-               product_id INT PATH '$.product.id',\r\n-               title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n-               title_en NVARCHAR(255) PATH '$.product.title_en',\r\n-               url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n-               status NVARCHAR(255) PATH '$.product.status',\r\n-               brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n-               category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n-               dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n-               item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-               item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n-               storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n-               url JSON PATH '$.product.images.main.url',\r\n-               rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n-               selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n-               discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n-               is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n-               is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n-               is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n-               bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n-               variant_id INT PATH '$.variant.id',\r\n-               seller_id INT PATH '$.variant.seller.id',\r\n-               seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n-               seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n-               seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n-           )\r\n-       ) AS jt;`,\r\n-     // { mapToEntity: OrderItem },\r\n-    );\r\n+//     const orderItems = await this.orderItemRepository.query(\r\n+//       `SELECT \r\n+//       jt.id AS order_item_id,\r\n+//       jt.quantity AS order_item_quantity,\r\n+//       jt.product_id AS product_id,\r\n+//       jt.title_fa AS product_title_fa,\r\n+//       jt.title_en AS product_title_en,\r\n+//       jt.url_uri AS product_url_uri,\r\n+//       jt.status AS product_status,\r\n+//       jt.brand AS product_brand,\r\n+//       jt.category AS product_category,\r\n+//       jt.dimension20 AS product_dimension20,\r\n+//       jt.item_category2 AS product_item_category2,\r\n+//       jt.item_category3 AS product_item_category3,\r\n+//       jt.storage_ids AS product_image_storage_ids,\r\n+//       jt.url AS product_image_url,\r\n+//       jt.rrp_price AS price_rrp_price,\r\n+//       jt.selling_price AS price_selling_price,\r\n+//       jt.discount_percent AS price_discount_percent,\r\n+//       jt.is_incredible AS price_is_incredible,\r\n+//       jt.is_promotion AS price_is_promotion,\r\n+//       jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n+//       jt.bnpl_active AS price_bnpl_active,\r\n+//       jt.variant_id AS variant_id,\r\n+//       jt.seller_id AS seller_id,\r\n+//       jt.seller_title AS seller_title,\r\n+//       jt.seller_code AS seller_code,\r\n+//       jt.seller_url AS seller_url\r\n+//   FROM orders,\r\n+//        JSON_TABLE(\r\n+//            order_content,\r\n+//            '$.order_item[*]'\r\n+//            COLUMNS (\r\n+//                id INT PATH '$.id',\r\n+//                quantity INT PATH '$.quantity',\r\n+//                product_id INT PATH '$.product.id',\r\n+//                title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+//                title_en NVARCHAR(255) PATH '$.product.title_en',\r\n+//                url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n+//                status NVARCHAR(255) PATH '$.product.status',\r\n+//                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n+//                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n+//                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n+//                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n+//                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n+//                storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n+//                url JSON PATH '$.product.images.main.url',\r\n+//                rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n+//                selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n+//                discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n+//                is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n+//                is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n+//                is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n+//                bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n+//                variant_id INT PATH '$.variant.id',\r\n+//                seller_id INT PATH '$.variant.seller.id',\r\n+//                seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n+//                seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n+//                seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n+//            )\r\n+//        ) AS jt;`,\r\n+//      // { mapToEntity: OrderItem },\r\n+//     );\r\n \r\n-    return orderItems;\r\n+    return null;//orderItems;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1704629182212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n \r\n @Injectable()\r\n export class OrderItemService {\r\n   constructor(\r\n-    // @InjectRepository(OrderItem)\r\n-    // private readonly orderItemRepository: Repository<OrderItem>,\r\n+    @InjectRepository(OrderItem)\r\n+    private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n   async get_orderItems(): Promise<OrderItem[]> {\r\n //     const orderItems = await this.orderItemRepository.query(\r\n"
                },
                {
                    "date": 1704629432090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,71 +11,71 @@\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n   async get_orderItems(): Promise<OrderItem[]> {\r\n-//     const orderItems = await this.orderItemRepository.query(\r\n-//       `SELECT \r\n-//       jt.id AS order_item_id,\r\n-//       jt.quantity AS order_item_quantity,\r\n-//       jt.product_id AS product_id,\r\n-//       jt.title_fa AS product_title_fa,\r\n-//       jt.title_en AS product_title_en,\r\n-//       jt.url_uri AS product_url_uri,\r\n-//       jt.status AS product_status,\r\n-//       jt.brand AS product_brand,\r\n-//       jt.category AS product_category,\r\n-//       jt.dimension20 AS product_dimension20,\r\n-//       jt.item_category2 AS product_item_category2,\r\n-//       jt.item_category3 AS product_item_category3,\r\n-//       jt.storage_ids AS product_image_storage_ids,\r\n-//       jt.url AS product_image_url,\r\n-//       jt.rrp_price AS price_rrp_price,\r\n-//       jt.selling_price AS price_selling_price,\r\n-//       jt.discount_percent AS price_discount_percent,\r\n-//       jt.is_incredible AS price_is_incredible,\r\n-//       jt.is_promotion AS price_is_promotion,\r\n-//       jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n-//       jt.bnpl_active AS price_bnpl_active,\r\n-//       jt.variant_id AS variant_id,\r\n-//       jt.seller_id AS seller_id,\r\n-//       jt.seller_title AS seller_title,\r\n-//       jt.seller_code AS seller_code,\r\n-//       jt.seller_url AS seller_url\r\n-//   FROM orders,\r\n-//        JSON_TABLE(\r\n-//            order_content,\r\n-//            '$.order_item[*]'\r\n-//            COLUMNS (\r\n-//                id INT PATH '$.id',\r\n-//                quantity INT PATH '$.quantity',\r\n-//                product_id INT PATH '$.product.id',\r\n-//                title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n-//                title_en NVARCHAR(255) PATH '$.product.title_en',\r\n-//                url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n-//                status NVARCHAR(255) PATH '$.product.status',\r\n-//                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n-//                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n-//                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n-//                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-//                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n-//                storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n-//                url JSON PATH '$.product.images.main.url',\r\n-//                rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n-//                selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n-//                discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n-//                is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n-//                is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n-//                is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n-//                bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n-//                variant_id INT PATH '$.variant.id',\r\n-//                seller_id INT PATH '$.variant.seller.id',\r\n-//                seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n-//                seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n-//                seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n-//            )\r\n-//        ) AS jt;`,\r\n-//      // { mapToEntity: OrderItem },\r\n-//     );\r\n+    const orderItems = await this.orderItemRepository.query(\r\n+      `SELECT \r\n+      jt.id AS order_item_id,\r\n+      jt.quantity AS order_item_quantity,\r\n+      jt.product_id AS product_id,\r\n+      jt.title_fa AS product_title_fa,\r\n+      jt.title_en AS product_title_en,\r\n+      jt.url_uri AS product_url_uri,\r\n+      jt.status AS product_status,\r\n+      jt.brand AS product_brand,\r\n+      jt.category AS product_category,\r\n+      jt.dimension20 AS product_dimension20,\r\n+      jt.item_category2 AS product_item_category2,\r\n+      jt.item_category3 AS product_item_category3,\r\n+      jt.storage_ids AS product_image_storage_ids,\r\n+      jt.url AS product_image_url,\r\n+      jt.rrp_price AS price_rrp_price,\r\n+      jt.selling_price AS price_selling_price,\r\n+      jt.discount_percent AS price_discount_percent,\r\n+      jt.is_incredible AS price_is_incredible,\r\n+      jt.is_promotion AS price_is_promotion,\r\n+      jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n+      jt.bnpl_active AS price_bnpl_active,\r\n+      jt.variant_id AS variant_id,\r\n+      jt.seller_id AS seller_id,\r\n+      jt.seller_title AS seller_title,\r\n+      jt.seller_code AS seller_code,\r\n+      jt.seller_url AS seller_url\r\n+  FROM orders,\r\n+       JSON_TABLE(\r\n+           order_content,\r\n+           '$.order_item[*]'\r\n+           COLUMNS (\r\n+               id INT PATH '$.id',\r\n+               quantity INT PATH '$.quantity',\r\n+               product_id INT PATH '$.product.id',\r\n+               title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+               title_en NVARCHAR(255) PATH '$.product.title_en',\r\n+               url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n+               status NVARCHAR(255) PATH '$.product.status',\r\n+               brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n+               category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n+               dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n+               item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n+               item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n+               storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n+               url JSON PATH '$.product.images.main.url',\r\n+               rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n+               selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n+               discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n+               is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n+               is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n+               is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n+               bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n+               variant_id INT PATH '$.variant.id',\r\n+               seller_id INT PATH '$.variant.seller.id',\r\n+               seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n+               seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n+               seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n+           )\r\n+       ) AS jt;`,\r\n+     // { mapToEntity: OrderItem },\r\n+    );\r\n \r\n-    return null;//orderItems;\r\n+    return orderItems;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1704629609817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,8 @@\n       jt.category AS product_category,\r\n       jt.dimension20 AS product_dimension20,\r\n       jt.item_category2 AS product_item_category2,\r\n       jt.item_category3 AS product_item_category3,\r\n-      jt.storage_ids AS product_image_storage_ids,\r\n       jt.url AS product_image_url,\r\n       jt.rrp_price AS price_rrp_price,\r\n       jt.selling_price AS price_selling_price,\r\n       jt.discount_percent AS price_discount_percent,\r\n"
                },
                {
                    "date": 1704629681079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,21 +25,8 @@\n       jt.category AS product_category,\r\n       jt.dimension20 AS product_dimension20,\r\n       jt.item_category2 AS product_item_category2,\r\n       jt.item_category3 AS product_item_category3,\r\n-      jt.url AS product_image_url,\r\n-      jt.rrp_price AS price_rrp_price,\r\n-      jt.selling_price AS price_selling_price,\r\n-      jt.discount_percent AS price_discount_percent,\r\n-      jt.is_incredible AS price_is_incredible,\r\n-      jt.is_promotion AS price_is_promotion,\r\n-      jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n-      jt.bnpl_active AS price_bnpl_active,\r\n-      jt.variant_id AS variant_id,\r\n-      jt.seller_id AS seller_id,\r\n-      jt.seller_title AS seller_title,\r\n-      jt.seller_code AS seller_code,\r\n-      jt.seller_url AS seller_url\r\n   FROM orders,\r\n        JSON_TABLE(\r\n            order_content,\r\n            '$.order_item[*]'\r\n@@ -54,23 +41,9 @@\n                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-               item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n-               storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n-               url JSON PATH '$.product.images.main.url',\r\n-               rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n-               selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n-               discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n-               is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n-               is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n-               is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n-               bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n-               variant_id INT PATH '$.variant.id',\r\n-               seller_id INT PATH '$.variant.seller.id',\r\n-               seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n-               seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n-               seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n+               item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3', \r\n            )\r\n        ) AS jt;`,\r\n      // { mapToEntity: OrderItem },\r\n     );\r\n"
                },
                {
                    "date": 1704629753791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n       jt.brand AS product_brand,\r\n       jt.category AS product_category,\r\n       jt.dimension20 AS product_dimension20,\r\n       jt.item_category2 AS product_item_category2,\r\n-      jt.item_category3 AS product_item_category3,\r\n+      jt.item_category3 AS product_item_category3\r\n   FROM orders,\r\n        JSON_TABLE(\r\n            order_content,\r\n            '$.order_item[*]'\r\n@@ -41,9 +41,9 @@\n                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-               item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3', \r\n+               item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3'\r\n            )\r\n        ) AS jt;`,\r\n      // { mapToEntity: OrderItem },\r\n     );\r\n"
                },
                {
                    "date": 1704630237814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,52 +2,156 @@\n import { InjectRepository } from '@nestjs/typeorm';\r\n import { MoreThan, Repository } from 'typeorm';\r\n import { OrderItem } from './entity/OrderItem';\r\n \r\n-\r\n @Injectable()\r\n export class OrderItemService {\r\n   constructor(\r\n     @InjectRepository(OrderItem)\r\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n   async get_orderItems(): Promise<OrderItem[]> {\r\n-    const orderItems = await this.orderItemRepository.query(\r\n-      `SELECT \r\n-      jt.id AS order_item_id,\r\n-      jt.quantity AS order_item_quantity,\r\n-      jt.product_id AS product_id,\r\n-      jt.title_fa AS product_title_fa,\r\n-      jt.title_en AS product_title_en,\r\n-      jt.url_uri AS product_url_uri,\r\n-      jt.status AS product_status,\r\n-      jt.brand AS product_brand,\r\n-      jt.category AS product_category,\r\n-      jt.dimension20 AS product_dimension20,\r\n-      jt.item_category2 AS product_item_category2,\r\n-      jt.item_category3 AS product_item_category3\r\n-  FROM orders,\r\n-       JSON_TABLE(\r\n-           order_content,\r\n-           '$.order_item[*]'\r\n-           COLUMNS (\r\n-               id INT PATH '$.id',\r\n-               quantity INT PATH '$.quantity',\r\n-               product_id INT PATH '$.product.id',\r\n-               title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n-               title_en NVARCHAR(255) PATH '$.product.title_en',\r\n-               url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n-               status NVARCHAR(255) PATH '$.product.status',\r\n-               brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n-               category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n-               dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n-               item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-               item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3'\r\n-           )\r\n-       ) AS jt;`,\r\n-     // { mapToEntity: OrderItem },\r\n-    );\r\n+    const query = this.orderItemRepository\r\n+      .createQueryBuilder('orderItem')\r\n+      .from(\r\n+        (subQuery) =>\r\n+          subQuery\r\n+            .select(\r\n+              `jt.id AS order_item_id,\r\n+          jt.quantity AS order_item_quantity,\r\n+          jt.product_id AS product_id,\r\n+          jt.title_fa AS product_title_fa,\r\n+          jt.title_en AS product_title_en,\r\n+          jt.url_uri AS product_url_uri,\r\n+          jt.status AS product_status,\r\n+          jt.brand AS product_brand,\r\n+          jt.category AS product_category,\r\n+          jt.dimension20 AS product_dimension20,\r\n+          jt.item_category2 AS product_item_category2,\r\n+          jt.item_category3 AS product_item_category3,\r\n+          jt.storage_ids AS product_image_storage_ids,\r\n+          jt.url AS product_image_url,\r\n+          jt.rrp_price AS price_rrp_price,\r\n+          jt.selling_price AS price_selling_price,\r\n+          jt.discount_percent AS price_discount_percent,\r\n+          jt.is_incredible AS price_is_incredible,\r\n+          jt.is_promotion AS price_is_promotion,\r\n+          jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n+          jt.bnpl_active AS price_bnpl_active,\r\n+          jt.variant_id AS variant_id,\r\n+          jt.seller_id AS seller_id,\r\n+          jt.seller_title AS seller_title,\r\n+          jt.seller_code AS seller_code,\r\n+          jt.seller_url AS seller_url`,\r\n+            )\r\n+            .from('orders', 'orders')\r\n+            .addFrom(\r\n+              `JSON_TABLE(\r\n+            order_content,\r\n+            '$.order_item[*]'\r\n+            COLUMNS (\r\n+                id INT PATH '$.id',\r\n+                quantity INT PATH '$.quantity',\r\n+                product_id INT PATH '$.product.id',\r\n+                title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+                title_en NVARCHAR(255) PATH '$.product.title_en',\r\n+                url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n+                status NVARCHAR(255) PATH '$.product.status',\r\n+                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n+                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n+                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n+                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n+                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n+                storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n+                url JSON PATH '$.product.images.main.url',\r\n+                rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n+                selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n+                discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n+                is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n+                is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n+                is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n+                bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n+                variant_id INT PATH '$.variant.id',\r\n+                seller_id INT PATH '$.variant.seller.id',\r\n+                seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n+                seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n+                seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n+            )\r\n+        ) AS jt`,\r\n+              'jt',\r\n+            ),\r\n+        'orderItem',\r\n+      )\r\n+      .select('orderItem.*');\r\n \r\n-    return orderItems;\r\n+    // Get the query parameters from the request object\r\n+    const { item_category2, item_category3, product_status, seller_id } =\r\n+      req.query;\r\n+\r\n+    // Add conditions based on the query parameters\r\n+    if (item_category2) {\r\n+      query.andWhere('orderItem.product_item_category2 = :item_category2', {\r\n+        item_category2,\r\n+      });\r\n+    }\r\n+    if (item_category3) {\r\n+      query.andWhere('orderItem.product_item_category3 = :item_category3', {\r\n+        item_category3,\r\n+      });\r\n+    }\r\n+    if (product_status) {\r\n+      query.andWhere('orderItem.product_status = :product_status', {\r\n+        product_status,\r\n+      });\r\n+    }\r\n+    if (seller_id) {\r\n+      query.andWhere('orderItem.seller_id = :seller_id', {\r\n+        seller_id,\r\n+      });\r\n+    }\r\n+\r\n+    // Execute the query and get the result\r\n+    const result = await query.getMany();\r\n+    return result;\r\n   }\r\n+\r\n+  //   async get_orderItems(): Promise<OrderItem[]> {\r\n+  //     const orderItems = await this.orderItemRepository.query(\r\n+  //       `SELECT\r\n+  //       jt.id AS order_item_id,\r\n+  //       jt.quantity AS order_item_quantity,\r\n+  //       jt.product_id AS product_id,\r\n+  //       jt.title_fa AS product_title_fa,\r\n+  //       jt.title_en AS product_title_en,\r\n+  //       jt.url_uri AS product_url_uri,\r\n+  //       jt.status AS product_status,\r\n+  //       jt.brand AS product_brand,\r\n+  //       jt.category AS product_category,\r\n+  //       jt.dimension20 AS product_dimension20,\r\n+  //       jt.item_category2 AS product_item_category2,\r\n+  //       jt.item_category3 AS product_item_category3\r\n+  //   FROM orders,\r\n+  //        JSON_TABLE(\r\n+  //            order_content,\r\n+  //            '$.order_item[*]'\r\n+  //            COLUMNS (\r\n+  //                id INT PATH '$.id',\r\n+  //                quantity INT PATH '$.quantity',\r\n+  //                product_id INT PATH '$.product.id',\r\n+  //                title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+  //                title_en NVARCHAR(255) PATH '$.product.title_en',\r\n+  //                url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n+  //                status NVARCHAR(255) PATH '$.product.status',\r\n+  //                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n+  //                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n+  //                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n+  //                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n+  //                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3'\r\n+  //            )\r\n+  //        ) AS jt;`,\r\n+  //      // { mapToEntity: OrderItem },\r\n+  //     );\r\n+\r\n+  //     return orderItems;\r\n+  //   }\r\n }\r\n"
                },
                {
                    "date": 1704630257742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { Injectable, Logger } from '@nestjs/common';\r\n import { InjectRepository } from '@nestjs/typeorm';\r\n-import { MoreThan, Repository } from 'typeorm';\r\n+import { MoreThan, ObjectLiteral, Repository } from 'typeorm';\r\n import { OrderItem } from './entity/OrderItem';\r\n \r\n @Injectable()\r\n export class OrderItemService {\r\n@@ -9,9 +9,9 @@\n     @InjectRepository(OrderItem)\r\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n-  async get_orderItems(): Promise<OrderItem[]> {\r\n+  async get_orderItems(): Promise<ObjectLiteral[]> {\r\n     const query = this.orderItemRepository\r\n       .createQueryBuilder('orderItem')\r\n       .from(\r\n         (subQuery) =>\r\n"
                },
                {
                    "date": 1704630300092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,23 +27,9 @@\n           jt.brand AS product_brand,\r\n           jt.category AS product_category,\r\n           jt.dimension20 AS product_dimension20,\r\n           jt.item_category2 AS product_item_category2,\r\n-          jt.item_category3 AS product_item_category3,\r\n-          jt.storage_ids AS product_image_storage_ids,\r\n-          jt.url AS product_image_url,\r\n-          jt.rrp_price AS price_rrp_price,\r\n-          jt.selling_price AS price_selling_price,\r\n-          jt.discount_percent AS price_discount_percent,\r\n-          jt.is_incredible AS price_is_incredible,\r\n-          jt.is_promotion AS price_is_promotion,\r\n-          jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n-          jt.bnpl_active AS price_bnpl_active,\r\n-          jt.variant_id AS variant_id,\r\n-          jt.seller_id AS seller_id,\r\n-          jt.seller_title AS seller_title,\r\n-          jt.seller_code AS seller_code,\r\n-          jt.seller_url AS seller_url`,\r\n+          jt.item_category3 AS product_item_category3`\r\n             )\r\n             .from('orders', 'orders')\r\n             .addFrom(\r\n               `JSON_TABLE(\r\n@@ -60,24 +46,10 @@\n                 brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n                 category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n                 dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n                 item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n-                storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n-                url JSON PATH '$.product.images.main.url',\r\n-                rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n-                selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n-                discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n-                is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n-                is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n-                is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n-                bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n-                variant_id INT PATH '$.variant.id',\r\n-                seller_id INT PATH '$.variant.seller.id',\r\n-                seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n-                seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n-                seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n-            )\r\n+                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3'\r\n+            \r\n         ) AS jt`,\r\n               'jt',\r\n             ),\r\n         'orderItem',\r\n"
                },
                {
                    "date": 1704630587179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     @InjectRepository(OrderItem)\r\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n-  async get_orderItems(): Promise<ObjectLiteral[]> {\r\n+  async get_orderItems(itemCategory2:string): Promise<ObjectLiteral[]> {\r\n     const query = this.orderItemRepository\r\n       .createQueryBuilder('orderItem')\r\n       .from(\r\n         (subQuery) =>\r\n@@ -55,33 +55,16 @@\n         'orderItem',\r\n       )\r\n       .select('orderItem.*');\r\n \r\n-    // Get the query parameters from the request object\r\n-    const { item_category2, item_category3, product_status, seller_id } =\r\n-      req.query;\r\n-\r\n+ \r\n     // Add conditions based on the query parameters\r\n-    if (item_category2) {\r\n+    if (itemCategory2) {\r\n       query.andWhere('orderItem.product_item_category2 = :item_category2', {\r\n-        item_category2,\r\n+        itemCategory2,\r\n       });\r\n     }\r\n-    if (item_category3) {\r\n-      query.andWhere('orderItem.product_item_category3 = :item_category3', {\r\n-        item_category3,\r\n-      });\r\n-    }\r\n-    if (product_status) {\r\n-      query.andWhere('orderItem.product_status = :product_status', {\r\n-        product_status,\r\n-      });\r\n-    }\r\n-    if (seller_id) {\r\n-      query.andWhere('orderItem.seller_id = :seller_id', {\r\n-        seller_id,\r\n-      });\r\n-    }\r\n+   \r\n \r\n     // Execute the query and get the result\r\n     const result = await query.getMany();\r\n     return result;\r\n"
                },
                {
                    "date": 1704631107225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,65 +11,63 @@\n   ) {}\r\n \r\n   async get_orderItems(itemCategory2:string): Promise<ObjectLiteral[]> {\r\n     const query = this.orderItemRepository\r\n-      .createQueryBuilder('orderItem')\r\n-      .from(\r\n-        (subQuery) =>\r\n-          subQuery\r\n-            .select(\r\n-              `jt.id AS order_item_id,\r\n-          jt.quantity AS order_item_quantity,\r\n-          jt.product_id AS product_id,\r\n-          jt.title_fa AS product_title_fa,\r\n-          jt.title_en AS product_title_en,\r\n-          jt.url_uri AS product_url_uri,\r\n-          jt.status AS product_status,\r\n-          jt.brand AS product_brand,\r\n-          jt.category AS product_category,\r\n-          jt.dimension20 AS product_dimension20,\r\n-          jt.item_category2 AS product_item_category2,\r\n-          jt.item_category3 AS product_item_category3`\r\n-            )\r\n-            .from('orders', 'orders')\r\n-            .addFrom(\r\n-              `JSON_TABLE(\r\n-            order_content,\r\n-            '$.order_item[*]'\r\n-            COLUMNS (\r\n-                id INT PATH '$.id',\r\n-                quantity INT PATH '$.quantity',\r\n-                product_id INT PATH '$.product.id',\r\n-                title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n-                title_en NVARCHAR(255) PATH '$.product.title_en',\r\n-                url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n-                status NVARCHAR(255) PATH '$.product.status',\r\n-                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n-                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n-                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n-                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3'\r\n-            \r\n-        ) AS jt`,\r\n-              'jt',\r\n-            ),\r\n-        'orderItem',\r\n-      )\r\n-      .select('orderItem.*');\r\n-\r\n- \r\n-    // Add conditions based on the query parameters\r\n-    if (itemCategory2) {\r\n-      query.andWhere('orderItem.product_item_category2 = :item_category2', {\r\n-        itemCategory2,\r\n-      });\r\n-    }\r\n-   \r\n-\r\n-    // Execute the query and get the result\r\n-    const result = await query.getMany();\r\n-    return result;\r\n+    .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n+    .from(\r\n+      (subQuery) =>\r\n+        subQuery\r\n+          .select(\r\n+            `jt.id AS order_item_id,\r\n+            jt.quantity AS order_item_quantity,\r\n+            jt.product_id AS product_id,\r\n+            jt.title_fa AS product_title_fa,\r\n+            jt.title_en AS product_title_en,\r\n+            jt.url_uri AS product_url_uri,\r\n+            jt.status AS product_status,\r\n+            jt.brand AS product_brand,\r\n+            jt.category AS product_category,\r\n+            jt.dimension20 AS product_dimension20,\r\n+            jt.item_category2 AS product_item_category2,\r\n+            jt.item_category3 AS product_item_category3`\r\n+          )\r\n+          .from('orders', 'orders')\r\n+          .addFrom(\r\n+            `JSON_TABLE(\r\n+              order_content,\r\n+              '$.order_item[*]'\r\n+              COLUMNS (\r\n+                  id INT PATH '$.id',\r\n+                  quantity INT PATH '$.quantity',\r\n+                  product_id INT PATH '$.product.id',\r\n+                  title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+                  title_en NVARCHAR(255) PATH '$.product.title_en',\r\n+                  url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n+                  status NVARCHAR(255) PATH '$.product.status',\r\n+                  brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n+                  category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n+                  dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n+                  item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n+                  item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3'\r\n+              \r\n+          ) AS jt`,\r\n+            'jt',\r\n+          ),\r\n+      'OrderItem', // use the OrderItem alias\r\n+    )\r\n+    .select('OrderItem.*'); // use the OrderItem alias\r\n+  \r\n+  // Add conditions based on the query parameters\r\n+  if (itemCategory2) {\r\n+    query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n+      itemCategory2,\r\n+    });\r\n   }\r\n+  \r\n+  // Execute the query and get the result\r\n+  const result = await query.getMany();\r\n+  return result;\r\n+}\r\n \r\n   //   async get_orderItems(): Promise<OrderItem[]> {\r\n   //     const orderItems = await this.orderItemRepository.query(\r\n   //       `SELECT\r\n"
                },
                {
                    "date": 1704631246067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n     });\r\n   }\r\n   \r\n   // Execute the query and get the result\r\n-  const result = await query.getMany();\r\n+  const result = await query.getRawMany();\r\n   return result;\r\n }\r\n \r\n   //   async get_orderItems(): Promise<OrderItem[]> {\r\n"
                },
                {
                    "date": 1704690650248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,65 +9,46 @@\n     @InjectRepository(OrderItem)\r\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n-  async get_orderItems(itemCategory2:string): Promise<ObjectLiteral[]> {\r\n+  async get_orderItems(itemCategory2: string): Promise<ObjectLiteral[]> {\r\n     const query = this.orderItemRepository\r\n-    .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n-    .from(\r\n-      (subQuery) =>\r\n-        subQuery\r\n-          .select(\r\n-            `jt.id AS order_item_id,\r\n+      .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n+      .from(\r\n+        (subQuery) =>\r\n+          subQuery\r\n+            .select(\r\n+              `jt.id AS order_item_id,\r\n             jt.quantity AS order_item_quantity,\r\n-            jt.product_id AS product_id,\r\n-            jt.title_fa AS product_title_fa,\r\n-            jt.title_en AS product_title_en,\r\n-            jt.url_uri AS product_url_uri,\r\n-            jt.status AS product_status,\r\n-            jt.brand AS product_brand,\r\n-            jt.category AS product_category,\r\n-            jt.dimension20 AS product_dimension20,\r\n-            jt.item_category2 AS product_item_category2,\r\n-            jt.item_category3 AS product_item_category3`\r\n-          )\r\n-          .from('orders', 'orders')\r\n-          .addFrom(\r\n-            `JSON_TABLE(\r\n+            jt.product_id AS product_id`,\r\n+            )\r\n+            .from('orders', 'orders')\r\n+            .addFrom(\r\n+              `JSON_TABLE(\r\n               order_content,\r\n               '$.order_item[*]'\r\n               COLUMNS (\r\n                   id INT PATH '$.id',\r\n                   quantity INT PATH '$.quantity',\r\n-                  product_id INT PATH '$.product.id',\r\n-                  title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n-                  title_en NVARCHAR(255) PATH '$.product.title_en',\r\n-                  url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n-                  status NVARCHAR(255) PATH '$.product.status',\r\n-                  brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n-                  category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n-                  dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n-                  item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-                  item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3'\r\n+                  product_id INT PATH '$.product.id'\r\n               \r\n           ) AS jt`,\r\n-            'jt',\r\n-          ),\r\n-      'OrderItem', // use the OrderItem alias\r\n-    )\r\n-    .select('OrderItem.*'); // use the OrderItem alias\r\n-  \r\n-  // Add conditions based on the query parameters\r\n-  if (itemCategory2) {\r\n-    query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n-      itemCategory2,\r\n-    });\r\n+              'jt',\r\n+            ),\r\n+        'OrderItem', // use the OrderItem alias\r\n+      )\r\n+      .select('OrderItem.*'); // use the OrderItem alias\r\n+\r\n+    // Add conditions based on the query parameters\r\n+    if (itemCategory2) {\r\n+      query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n+        itemCategory2,\r\n+      });\r\n+    }\r\n+    // Execute the query and get the result\r\n+    const result = await query.getRawMany();\r\n+    return result;\r\n   }\r\n-  \r\n-  // Execute the query and get the result\r\n-  const result = await query.getRawMany();\r\n-  return result;\r\n-}\r\n \r\n   //   async get_orderItems(): Promise<OrderItem[]> {\r\n   //     const orderItems = await this.orderItemRepository.query(\r\n   //       `SELECT\r\n"
                },
                {
                    "date": 1704690777277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n       query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n         itemCategory2,\r\n       });\r\n     }\r\n+    console.log(query.getSql())\r\n     // Execute the query and get the result\r\n     const result = await query.getRawMany();\r\n     return result;\r\n   }\r\n"
                },
                {
                    "date": 1704691239880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,19 +22,21 @@\n             jt.product_id AS product_id`,\r\n             )\r\n             .from('orders', 'orders')\r\n             .addFrom(\r\n-              `JSON_TABLE(\r\n-              order_content,\r\n-              '$.order_item[*]'\r\n-              COLUMNS (\r\n-                  id INT PATH '$.id',\r\n-                  quantity INT PATH '$.quantity',\r\n-                  product_id INT PATH '$.product.id'\r\n-              \r\n-          ) AS jt`,\r\n-              'jt',\r\n-            ),\r\n+                `JSON_TABLE(\r\n+                  order_content,\r\n+                  '$.order_item[*]' -- use $ instead of .\r\n+                  COLUMNS (\r\n+                    id INT PATH '$.id', -- use $ instead of .\r\n+                    quantity INT PATH '$.quantity', -- use $ instead of .\r\n+                    product_id INT PATH '$.product.id', -- use $ instead of .\r\n+                    -- rest of the columns\r\n+                  )\r\n+                ) AS jt`,\r\n+                'jt',\r\n+              )\r\n+              ,\r\n         'OrderItem', // use the OrderItem alias\r\n       )\r\n       .select('OrderItem.*'); // use the OrderItem alias\r\n \r\n"
                },
                {
                    "date": 1704691313363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,46 +12,43 @@\n \r\n   async get_orderItems(itemCategory2: string): Promise<ObjectLiteral[]> {\r\n     const query = this.orderItemRepository\r\n       .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n+      .select('OrderItem.id', 'order_item_id')\r\n+      .addSelect('OrderItem.quantity', 'order_item_quantity')\r\n+      .addSelect('OrderItem.product_id', 'product_id')\r\n       .from(\r\n         (subQuery) =>\r\n           subQuery\r\n-            .select(\r\n-              `jt.id AS order_item_id,\r\n-            jt.quantity AS order_item_quantity,\r\n-            jt.product_id AS product_id`,\r\n-            )\r\n+            .select()\r\n             .from('orders', 'orders')\r\n             .addFrom(\r\n-                `JSON_TABLE(\r\n-                  order_content,\r\n-                  '$.order_item[*]' -- use $ instead of .\r\n-                  COLUMNS (\r\n-                    id INT PATH '$.id', -- use $ instead of .\r\n-                    quantity INT PATH '$.quantity', -- use $ instead of .\r\n-                    product_id INT PATH '$.product.id', -- use $ instead of .\r\n-                    -- rest of the columns\r\n-                  )\r\n-                ) AS jt`,\r\n-                'jt',\r\n-              )\r\n-              ,\r\n-        'OrderItem', // use the OrderItem alias\r\n-      )\r\n-      .select('OrderItem.*'); // use the OrderItem alias\r\n-\r\n+              `JSON_TABLE(\r\n+                orders.order_content,\r\n+                '$.order_item[*]'\r\n+                COLUMNS (\r\n+                    id INT PATH '$.id',\r\n+                    quantity INT PATH '$.quantity',\r\n+                    product_id INT PATH '$.product.id'\r\n+                )\r\n+              )`,\r\n+              'jt'\r\n+            ),\r\n+        'jt'\r\n+      );\r\n+  \r\n     // Add conditions based on the query parameters\r\n     if (itemCategory2) {\r\n       query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n         itemCategory2,\r\n       });\r\n     }\r\n-    console.log(query.getSql())\r\n+  \r\n     // Execute the query and get the result\r\n     const result = await query.getRawMany();\r\n     return result;\r\n   }\r\n+  \r\n \r\n   //   async get_orderItems(): Promise<OrderItem[]> {\r\n   //     const orderItems = await this.orderItemRepository.query(\r\n   //       `SELECT\r\n"
                },
                {
                    "date": 1704691612856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n   \r\n     // Add conditions based on the query parameters\r\n     if (itemCategory2) {\r\n       query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n-        itemCategory2,\r\n+        item_category2: itemCategory2,\r\n       });\r\n     }\r\n   \r\n     // Execute the query and get the result\r\n"
                },
                {
                    "date": 1704691692388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,14 @@\n               `JSON_TABLE(\r\n                 orders.order_content,\r\n                 '$.order_item[*]'\r\n                 COLUMNS (\r\n-                    id INT PATH '$.id',\r\n-                    quantity INT PATH '$.quantity',\r\n-                    product_id INT PATH '$.product.id'\r\n+                  id INT PATH '$.id',\r\n+                  quantity INT PATH '$.quantity',\r\n+                  product_id INT PATH '$.product.id'\r\n                 )\r\n-              )`,\r\n+              )\r\n+              `,\r\n               'jt'\r\n             ),\r\n         'jt'\r\n       );\r\n"
                },
                {
                    "date": 1704691789785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,47 +9,47 @@\n     @InjectRepository(OrderItem)\r\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n-  async get_orderItems(itemCategory2: string): Promise<ObjectLiteral[]> {\r\n+  async get_orderItems(itemCategory2:string): Promise<ObjectLiteral[]> {\r\n     const query = this.orderItemRepository\r\n-      .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n-      .select('OrderItem.id', 'order_item_id')\r\n-      .addSelect('OrderItem.quantity', 'order_item_quantity')\r\n-      .addSelect('OrderItem.product_id', 'product_id')\r\n-      .from(\r\n-        (subQuery) =>\r\n-          subQuery\r\n-            .select()\r\n-            .from('orders', 'orders')\r\n-            .addFrom(\r\n-              `JSON_TABLE(\r\n-                orders.order_content,\r\n-                '$.order_item[*]'\r\n-                COLUMNS (\r\n+    .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n+    .from(\r\n+      (subQuery) =>\r\n+        subQuery\r\n+          .select(\r\n+            `jt.id AS order_item_id,\r\n+            jt.quantity AS order_item_quantity,\r\n+            jt.product_id AS product_id,`\r\n+          )\r\n+          .from('orders', 'orders')\r\n+          .addFrom(\r\n+            `JSON_TABLE(\r\n+              order_content,\r\n+              '$.order_item[*]'\r\n+              COLUMNS (\r\n                   id INT PATH '$.id',\r\n                   quantity INT PATH '$.quantity',\r\n                   product_id INT PATH '$.product.id'\r\n-                )\r\n-              )\r\n-              `,\r\n-              'jt'\r\n-            ),\r\n-        'jt'\r\n-      );\r\n+              \r\n+          ) AS jt`,\r\n+            'jt',\r\n+          ),\r\n+      'OrderItem', // use the OrderItem alias\r\n+    )\r\n+    .select('OrderItem.*'); // use the OrderItem alias\r\n   \r\n-    // Add conditions based on the query parameters\r\n-    if (itemCategory2) {\r\n-      query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n-        item_category2: itemCategory2,\r\n-      });\r\n-    }\r\n-  \r\n-    // Execute the query and get the result\r\n-    const result = await query.getRawMany();\r\n-    return result;\r\n+  // Add conditions based on the query parameters\r\n+  if (itemCategory2) {\r\n+    query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n+      itemCategory2,\r\n+    });\r\n   }\r\n   \r\n+  // Execute the query and get the result\r\n+  const result = await query.getRawMany();\r\n+  return result;\r\n+}\r\n \r\n   //   async get_orderItems(): Promise<OrderItem[]> {\r\n   //     const orderItems = await this.orderItemRepository.query(\r\n   //       `SELECT\r\n"
                },
                {
                    "date": 1704692835798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     @InjectRepository(OrderItem)\r\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n-  async get_orderItems(itemCategory2:string): Promise<ObjectLiteral[]> {\r\n+  async get_orderItems2(itemCategory2:string): Promise<ObjectLiteral[]> {\r\n     const query = this.orderItemRepository\r\n     .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n     .from(\r\n       (subQuery) =>\r\n@@ -49,44 +49,29 @@\n   const result = await query.getRawMany();\r\n   return result;\r\n }\r\n \r\n-  //   async get_orderItems(): Promise<OrderItem[]> {\r\n-  //     const orderItems = await this.orderItemRepository.query(\r\n-  //       `SELECT\r\n-  //       jt.id AS order_item_id,\r\n-  //       jt.quantity AS order_item_quantity,\r\n-  //       jt.product_id AS product_id,\r\n-  //       jt.title_fa AS product_title_fa,\r\n-  //       jt.title_en AS product_title_en,\r\n-  //       jt.url_uri AS product_url_uri,\r\n-  //       jt.status AS product_status,\r\n-  //       jt.brand AS product_brand,\r\n-  //       jt.category AS product_category,\r\n-  //       jt.dimension20 AS product_dimension20,\r\n-  //       jt.item_category2 AS product_item_category2,\r\n-  //       jt.item_category3 AS product_item_category3\r\n-  //   FROM orders,\r\n-  //        JSON_TABLE(\r\n-  //            order_content,\r\n-  //            '$.order_item[*]'\r\n-  //            COLUMNS (\r\n-  //                id INT PATH '$.id',\r\n-  //                quantity INT PATH '$.quantity',\r\n-  //                product_id INT PATH '$.product.id',\r\n-  //                title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n-  //                title_en NVARCHAR(255) PATH '$.product.title_en',\r\n-  //                url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n-  //                status NVARCHAR(255) PATH '$.product.status',\r\n-  //                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n-  //                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n-  //                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n-  //                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-  //                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3'\r\n-  //            )\r\n-  //        ) AS jt;`,\r\n-  //      // { mapToEntity: OrderItem },\r\n-  //     );\r\n-\r\n-  //     return orderItems;\r\n-  //   }\r\n+async get_orderItems(): Promise<OrderItem[]> {\r\n+    const query = this.orderItemRepository\r\n+      .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n+      .select('OrderItem.id', 'order_item_id')\r\n+      .addSelect('OrderItem.quantity', 'order_item_quantity')\r\n+      .addSelect('OrderItem.product_id', 'product_id')\r\n+      .from('orders', 'orders')\r\n+      .addFrom(\r\n+        `JSON_TABLE(\r\n+          orders.order_content,\r\n+          '$.order_item[*]'\r\n+          COLUMNS (\r\n+            id INT PATH '$.id',\r\n+            quantity INT PATH '$.quantity',\r\n+            product_id INT PATH '$.product.id'\r\n+          )\r\n+        )`,\r\n+        'jt'\r\n+      );\r\n+  \r\n+    const orderItems = await query.getRawMany();\r\n+    return orderItems;\r\n+  }\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1704692885682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n   const result = await query.getRawMany();\r\n   return result;\r\n }\r\n \r\n-async get_orderItems(): Promise<OrderItem[]> {\r\n+async get_orderItems(itemCategory2:string): Promise<OrderItem[]> {\r\n     const query = this.orderItemRepository\r\n       .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n       .select('OrderItem.id', 'order_item_id')\r\n       .addSelect('OrderItem.quantity', 'order_item_quantity')\r\n"
                },
                {
                    "date": 1704693242647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n   const result = await query.getRawMany();\r\n   return result;\r\n }\r\n \r\n-async get_orderItems(itemCategory2:string): Promise<OrderItem[]> {\r\n+async get_orderItems1(itemCategory2:string): Promise<OrderItem[]> {\r\n     const query = this.orderItemRepository\r\n       .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n       .select('OrderItem.id', 'order_item_id')\r\n       .addSelect('OrderItem.quantity', 'order_item_quantity')\r\n@@ -72,6 +72,27 @@\n   \r\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n+  async (itemCategory2:string): Promise<OrderItem[]> {\r\n+    const orderItems = await this.orderItemRepository.query(\r\n+      `SELECT\r\n+          jt.id AS order_item_id,\r\n+          jt.quantity AS order_item_quantity,\r\n+          jt.product_id AS product_id\r\n+      FROM orders,\r\n+           JSON_TABLE(\r\n+               order_content,\r\n+               '$.order_item[*]'\r\n+               COLUMNS (\r\n+                   id INT PATH '$.id',\r\n+                   quantity INT PATH '$.quantity',\r\n+                   product_id INT PATH '$.product.id'\r\n+               )\r\n+           ) AS jt;`,\r\n+      { type: QueryTypes.RAW }\r\n+    );\r\n   \r\n+    return orderItems;\r\n+  }\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1704693256601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,10 @@\n   \r\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n-  async (itemCategory2:string): Promise<OrderItem[]> {\r\n+  \r\n+  async get_orderItems(itemCategory2:string): Promise<OrderItem[]> {\r\n     const orderItems = await this.orderItemRepository.query(\r\n       `SELECT\r\n           jt.id AS order_item_id,\r\n           jt.quantity AS order_item_quantity,\r\n"
                },
                {
                    "date": 1704693304464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n                    quantity INT PATH '$.quantity',\r\n                    product_id INT PATH '$.product.id'\r\n                )\r\n            ) AS jt;`,\r\n-      { type: QueryTypes.RAW }\r\n+      //{ type: QueryTypes.RAW }\r\n     );\r\n   \r\n     return orderItems;\r\n   }\r\n"
                },
                {
                    "date": 1704693313918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,11 +76,11 @@\n   \r\n   async get_orderItems(itemCategory2:string): Promise<OrderItem[]> {\r\n     const orderItems = await this.orderItemRepository.query(\r\n       `SELECT\r\n-          jt.id AS order_item_id,\r\n-          jt.quantity AS order_item_quantity,\r\n-          jt.product_id AS product_id\r\n+          jt.id,\r\n+          jt.quantity ,\r\n+          jt.product_id \r\n       FROM orders,\r\n            JSON_TABLE(\r\n                order_content,\r\n                '$.order_item[*]'\r\n"
                },
                {
                    "date": 1704693463152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,11 +76,11 @@\n   \r\n   async get_orderItems(itemCategory2:string): Promise<OrderItem[]> {\r\n     const orderItems = await this.orderItemRepository.query(\r\n       `SELECT\r\n-          jt.id,\r\n-          jt.quantity ,\r\n-          jt.product_id \r\n+      jt.id AS order_item_id,\r\n+      jt.quantity AS order_item_quantity,\r\n+      jt.product_id AS product_id\r\n       FROM orders,\r\n            JSON_TABLE(\r\n                order_content,\r\n                '$.order_item[*]'\r\n@@ -96,4 +96,66 @@\n     return orderItems;\r\n   }\r\n   \r\n }\r\n+\r\n+\r\n+// SELECT\r\n+//     jt.id AS order_item_id,\r\n+//     jt.quantity AS order_item_quantity,\r\n+//     jt.product_id AS product_id,\r\n+//     jt.title_fa AS product_title_fa,\r\n+//     jt.title_en AS product_title_en,\r\n+//     jt.url_uri AS product_url_uri,\r\n+//     jt.status AS product_status,\r\n+//     jt.brand AS product_brand,\r\n+//     jt.category AS product_category,\r\n+//     jt.dimension20 AS product_dimension20,\r\n+//     jt.item_category2 AS product_item_category2,\r\n+//     jt.item_category3 AS product_item_category3,\r\n+//     jt.storage_ids AS product_image_storage_ids,\r\n+//     jt.url AS product_image_url,\r\n+//     jt.rrp_price AS price_rrp_price,\r\n+//     jt.selling_price AS price_selling_price,\r\n+//     jt.discount_percent AS price_discount_percent,\r\n+//     jt.is_incredible AS price_is_incredible,\r\n+//     jt.is_promotion AS price_is_promotion,\r\n+//     jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n+//     jt.bnpl_active AS price_bnpl_active,\r\n+//     jt.variant_id AS variant_id,\r\n+//     jt.seller_id AS seller_id,\r\n+//     jt.seller_title AS seller_title,\r\n+//     jt.seller_code AS seller_code,\r\n+//     jt.seller_url AS seller_url\r\n+// FROM orders,\r\n+// JSON_TABLE(\r\n+//     order_content,\r\n+//     '$.order_item[*]'\r\n+//     COLUMNS (\r\n+//         id INT PATH '$.id',\r\n+//         quantity INT PATH '$.quantity',\r\n+//         product_id INT PATH '$.product.id',\r\n+//         title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+//         title_en NVARCHAR(255) PATH '$.product.title_en',\r\n+//         url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n+//         status NVARCHAR(255) PATH '$.product.status',\r\n+//         brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n+//         category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n+//         dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n+//         item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n+//         item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n+//         storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n+//         url JSON PATH '$.product.images.main.url',\r\n+//         rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n+//         selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n+//         discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n+//         is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n+//         is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n+//         is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n+//         bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n+//         variant_id INT PATH '$.variant.id',\r\n+//         seller_id INT PATH '$.variant.seller.id',\r\n+//         seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n+//         seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n+//         seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n+//     )\r\n+// ) AS jt;\r\n"
                },
                {
                    "date": 1704693521382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,18 +77,64 @@\n   async get_orderItems(itemCategory2:string): Promise<OrderItem[]> {\r\n     const orderItems = await this.orderItemRepository.query(\r\n       `SELECT\r\n       jt.id AS order_item_id,\r\n-      jt.quantity AS order_item_quantity,\r\n-      jt.product_id AS product_id\r\n+    jt.quantity AS order_item_quantity,\r\n+    jt.product_id AS product_id,\r\n+    jt.title_fa AS product_title_fa,\r\n+    jt.title_en AS product_title_en,\r\n+    jt.url_uri AS product_url_uri,\r\n+    jt.status AS product_status,\r\n+    jt.brand AS product_brand,\r\n+    jt.category AS product_category,\r\n+    jt.dimension20 AS product_dimension20,\r\n+    jt.item_category2 AS product_item_category2,\r\n+    jt.item_category3 AS product_item_category3,\r\n+    jt.storage_ids AS product_image_storage_ids,\r\n+    jt.url AS product_image_url,\r\n+    jt.rrp_price AS price_rrp_price,\r\n+    jt.selling_price AS price_selling_price,\r\n+    jt.discount_percent AS price_discount_percent,\r\n+    jt.is_incredible AS price_is_incredible,\r\n+    jt.is_promotion AS price_is_promotion,\r\n+    jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n+    jt.bnpl_active AS price_bnpl_active,\r\n+    jt.variant_id AS variant_id,\r\n+    jt.seller_id AS seller_id,\r\n+    jt.seller_title AS seller_title,\r\n+    jt.seller_code AS seller_code,\r\n+    jt.seller_url AS seller_url\r\n       FROM orders,\r\n            JSON_TABLE(\r\n                order_content,\r\n                '$.order_item[*]'\r\n                COLUMNS (\r\n-                   id INT PATH '$.id',\r\n-                   quantity INT PATH '$.quantity',\r\n-                   product_id INT PATH '$.product.id'\r\n+                id INT PATH '$.id',\r\n+                quantity INT PATH '$.quantity',\r\n+                product_id INT PATH '$.product.id',\r\n+                title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+                title_en NVARCHAR(255) PATH '$.product.title_en',\r\n+                url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n+                status NVARCHAR(255) PATH '$.product.status',\r\n+                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n+                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n+                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n+                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n+                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n+                storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n+                url JSON PATH '$.product.images.main.url',\r\n+                rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n+                selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n+                discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n+                is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n+                is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n+                is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n+                bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n+                variant_id INT PATH '$.variant.id',\r\n+                seller_id INT PATH '$.variant.seller.id',\r\n+                seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n+                seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n+                seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n                )\r\n            ) AS jt;`,\r\n       //{ type: QueryTypes.RAW }\r\n     );\r\n"
                },
                {
                    "date": 1704693591467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,49 +9,49 @@\n     @InjectRepository(OrderItem)\r\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n-  async get_orderItems2(itemCategory2:string): Promise<ObjectLiteral[]> {\r\n+  async get_orderItems2(itemCategory2: string): Promise<ObjectLiteral[]> {\r\n     const query = this.orderItemRepository\r\n-    .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n-    .from(\r\n-      (subQuery) =>\r\n-        subQuery\r\n-          .select(\r\n-            `jt.id AS order_item_id,\r\n+      .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n+      .from(\r\n+        (subQuery) =>\r\n+          subQuery\r\n+            .select(\r\n+              `jt.id AS order_item_id,\r\n             jt.quantity AS order_item_quantity,\r\n-            jt.product_id AS product_id,`\r\n-          )\r\n-          .from('orders', 'orders')\r\n-          .addFrom(\r\n-            `JSON_TABLE(\r\n+            jt.product_id AS product_id,`,\r\n+            )\r\n+            .from('orders', 'orders')\r\n+            .addFrom(\r\n+              `JSON_TABLE(\r\n               order_content,\r\n               '$.order_item[*]'\r\n               COLUMNS (\r\n                   id INT PATH '$.id',\r\n                   quantity INT PATH '$.quantity',\r\n                   product_id INT PATH '$.product.id'\r\n               \r\n           ) AS jt`,\r\n-            'jt',\r\n-          ),\r\n-      'OrderItem', // use the OrderItem alias\r\n-    )\r\n-    .select('OrderItem.*'); // use the OrderItem alias\r\n-  \r\n-  // Add conditions based on the query parameters\r\n-  if (itemCategory2) {\r\n-    query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n-      itemCategory2,\r\n-    });\r\n+              'jt',\r\n+            ),\r\n+        'OrderItem', // use the OrderItem alias\r\n+      )\r\n+      .select('OrderItem.*'); // use the OrderItem alias\r\n+\r\n+    // Add conditions based on the query parameters\r\n+    if (itemCategory2) {\r\n+      query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n+        itemCategory2,\r\n+      });\r\n+    }\r\n+\r\n+    // Execute the query and get the result\r\n+    const result = await query.getRawMany();\r\n+    return result;\r\n   }\r\n-  \r\n-  // Execute the query and get the result\r\n-  const result = await query.getRawMany();\r\n-  return result;\r\n-}\r\n \r\n-async get_orderItems1(itemCategory2:string): Promise<OrderItem[]> {\r\n+  async get_orderItems1(itemCategory2: string): Promise<OrderItem[]> {\r\n     const query = this.orderItemRepository\r\n       .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n       .select('OrderItem.id', 'order_item_id')\r\n       .addSelect('OrderItem.quantity', 'order_item_quantity')\r\n@@ -66,85 +66,102 @@\n             quantity INT PATH '$.quantity',\r\n             product_id INT PATH '$.product.id'\r\n           )\r\n         )`,\r\n-        'jt'\r\n+        'jt',\r\n       );\r\n-  \r\n+\r\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n-  \r\n-  async get_orderItems(itemCategory2:string): Promise<OrderItem[]> {\r\n+\r\n+  async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n     const orderItems = await this.orderItemRepository.query(\r\n       `SELECT\r\n       jt.id AS order_item_id,\r\n-    jt.quantity AS order_item_quantity,\r\n-    jt.product_id AS product_id,\r\n-    jt.title_fa AS product_title_fa,\r\n-    jt.title_en AS product_title_en,\r\n-    jt.url_uri AS product_url_uri,\r\n-    jt.status AS product_status,\r\n-    jt.brand AS product_brand,\r\n-    jt.category AS product_category,\r\n-    jt.dimension20 AS product_dimension20,\r\n-    jt.item_category2 AS product_item_category2,\r\n-    jt.item_category3 AS product_item_category3,\r\n-    jt.storage_ids AS product_image_storage_ids,\r\n-    jt.url AS product_image_url,\r\n-    jt.rrp_price AS price_rrp_price,\r\n-    jt.selling_price AS price_selling_price,\r\n-    jt.discount_percent AS price_discount_percent,\r\n-    jt.is_incredible AS price_is_incredible,\r\n-    jt.is_promotion AS price_is_promotion,\r\n-    jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n-    jt.bnpl_active AS price_bnpl_active,\r\n-    jt.variant_id AS variant_id,\r\n-    jt.seller_id AS seller_id,\r\n-    jt.seller_title AS seller_title,\r\n-    jt.seller_code AS seller_code,\r\n-    jt.seller_url AS seller_url\r\n+    jt.quantity AS order_item_quantity\r\n       FROM orders,\r\n            JSON_TABLE(\r\n                order_content,\r\n                '$.order_item[*]'\r\n                COLUMNS (\r\n                 id INT PATH '$.id',\r\n-                quantity INT PATH '$.quantity',\r\n-                product_id INT PATH '$.product.id',\r\n-                title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n-                title_en NVARCHAR(255) PATH '$.product.title_en',\r\n-                url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n-                status NVARCHAR(255) PATH '$.product.status',\r\n-                brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n-                category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n-                dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n-                item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-                item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n-                storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n-                url JSON PATH '$.product.images.main.url',\r\n-                rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n-                selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n-                discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n-                is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n-                is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n-                is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n-                bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n-                variant_id INT PATH '$.variant.id',\r\n-                seller_id INT PATH '$.variant.seller.id',\r\n-                seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n-                seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n-                seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n+                quantity INT PATH '$.quantity'\r\n                )\r\n            ) AS jt;`,\r\n       //{ type: QueryTypes.RAW }\r\n     );\r\n-  \r\n+\r\n     return orderItems;\r\n   }\r\n-  \r\n-}\r\n+// }async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n+//     const orderItems = await this.orderItemRepository.query(\r\n+//       `SELECT\r\n+//       jt.id AS order_item_id,\r\n+//     jt.quantity AS order_item_quantity,\r\n+//     jt.product_id AS product_id,\r\n+//     jt.title_fa AS product_title_fa,\r\n+//     jt.title_en AS product_title_en,\r\n+//     jt.url_uri AS product_url_uri,\r\n+//     jt.status AS product_status,\r\n+//     jt.brand AS product_brand,\r\n+//     jt.category AS product_category,\r\n+//     jt.dimension20 AS product_dimension20,\r\n+//     jt.item_category2 AS product_item_category2,\r\n+//     jt.item_category3 AS product_item_category3,\r\n+//     jt.storage_ids AS product_image_storage_ids,\r\n+//     jt.url AS product_image_url,\r\n+//     jt.rrp_price AS price_rrp_price,\r\n+//     jt.selling_price AS price_selling_price,\r\n+//     jt.discount_percent AS price_discount_percent,\r\n+//     jt.is_incredible AS price_is_incredible,\r\n+//     jt.is_promotion AS price_is_promotion,\r\n+//     jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n+//     jt.bnpl_active AS price_bnpl_active,\r\n+//     jt.variant_id AS variant_id,\r\n+//     jt.seller_id AS seller_id,\r\n+//     jt.seller_title AS seller_title,\r\n+//     jt.seller_code AS seller_code,\r\n+//     jt.seller_url AS seller_url\r\n+//       FROM orders,\r\n+//            JSON_TABLE(\r\n+//                order_content,\r\n+//                '$.order_item[*]'\r\n+//                COLUMNS (\r\n+//                 id INT PATH '$.id',\r\n+//                 quantity INT PATH '$.quantity',\r\n+//                 product_id INT PATH '$.product.id',\r\n+//                 title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+//                 title_en NVARCHAR(255) PATH '$.product.title_en',\r\n+//                 url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n+//                 status NVARCHAR(255) PATH '$.product.status',\r\n+//                 brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n+//                 category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n+//                 dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n+//                 item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n+//                 item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n+//                 storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n+//                 url JSON PATH '$.product.images.main.url',\r\n+//                 rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n+//                 selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n+//                 discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n+//                 is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n+//                 is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n+//                 is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n+//                 bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n+//                 variant_id INT PATH '$.variant.id',\r\n+//                 seller_id INT PATH '$.variant.seller.id',\r\n+//                 seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n+//                 seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n+//                 seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n+//                )\r\n+//            ) AS jt;`,\r\n+//       //{ type: QueryTypes.RAW }\r\n+//     );\r\n \r\n+//     return orderItems;\r\n+//   }\r\n+// }\r\n \r\n // SELECT\r\n //     jt.id AS order_item_id,\r\n //     jt.quantity AS order_item_quantity,\r\n"
                },
                {
                    "date": 1704693621751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,9 @@\n     );\r\n \r\n     return orderItems;\r\n   }\r\n+}\r\n // }async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n //     const orderItems = await this.orderItemRepository.query(\r\n //       `SELECT\r\n //       jt.id AS order_item_id,\r\n"
                },
                {
                    "date": 1704693837548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,28 +73,41 @@\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n \r\n-  async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n-    const orderItems = await this.orderItemRepository.query(\r\n-      `SELECT\r\n-      jt.id AS order_item_id,\r\n-    jt.quantity AS order_item_quantity\r\n-      FROM orders,\r\n-           JSON_TABLE(\r\n-               order_content,\r\n-               '$.order_item[*]'\r\n-               COLUMNS (\r\n-                id INT PATH '$.id',\r\n-                quantity INT PATH '$.quantity'\r\n-               )\r\n-           ) AS jt;`,\r\n-      //{ type: QueryTypes.RAW }\r\n-    );\r\n-\r\n+  async get_orderItems(quantity: string): Promise<OrderItem[]> {\r\n+    // Initialize the query string\r\n+    let queryString = `SELECT\r\n+        jt.id AS order_item_id,\r\n+        jt.quantity AS order_item_quantity\r\n+        FROM orders,\r\n+             JSON_TABLE(\r\n+                 order_content,\r\n+                 '$.order_item[*]'\r\n+                 COLUMNS (\r\n+                  id INT PATH '$.id',\r\n+                  quantity INT PATH '$.quantity'\r\n+                 )\r\n+             ) AS jt`;\r\n+  \r\n+    // Initialize the params array\r\n+    let params = [];\r\n+  \r\n+    // Check if the quantity parameter is not null or empty\r\n+    if (quantity) {\r\n+      // Append the where clause to the query string\r\n+      queryString += ` WHERE jt.quantity = ?`;\r\n+  \r\n+      // Add the quantity parameter to the params array\r\n+      params.push(quantity);\r\n+    }\r\n+  \r\n+    // Execute the query with the params argument\r\n+    const orderItems = await this.orderItemRepository.query(queryString, params);\r\n+  \r\n     return orderItems;\r\n   }\r\n-}\r\n+  \r\n // }async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n //     const orderItems = await this.orderItemRepository.query(\r\n //       `SELECT\r\n //       jt.id AS order_item_id,\r\n"
                },
                {
                    "date": 1704693859905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n   }\r\n-  \r\n+}  \r\n // }async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n //     const orderItems = await this.orderItemRepository.query(\r\n //       `SELECT\r\n //       jt.id AS order_item_id,\r\n"
                },
                {
                    "date": 1704693918370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n \r\n-  async get_orderItems(quantity: string): Promise<OrderItem[]> {\r\n+  async get_orderItems(quantity: number): Promise<OrderItem[]> {\r\n     // Initialize the query string\r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity\r\n"
                },
                {
                    "date": 1704694734500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,10 +73,11 @@\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n \r\n-  async get_orderItems(quantity: number): Promise<OrderItem[]> {\r\n-    // Initialize the query string\r\n+  async get_orderItems(quantity: string, OrderBy: string, SortDirection: string,): Promise<OrderItem[]> {\r\n+\r\n+  \r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity\r\n         FROM orders,\r\n@@ -86,9 +87,14 @@\n                  COLUMNS (\r\n                   id INT PATH '$.id',\r\n                   quantity INT PATH '$.quantity'\r\n                  )\r\n-             ) AS jt`;\r\n+             ) AS jt\r\n+             WHERE \r\n+             1 = 1 AND\r\n+             (jt.quantity = ? OR ? IS NULL)\r\n+             ORDER BY CONCAT(?, ?)\r\n+             `;\r\n   \r\n     // Initialize the params array\r\n     let params = [];\r\n   \r\n@@ -100,8 +106,9 @@\n       // Add the quantity parameter to the params array\r\n       params.push(quantity);\r\n     }\r\n   \r\n+    \r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704694807452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,25 +90,25 @@\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n-             (jt.quantity = ? OR ? IS NULL)\r\n+             (jt.quantity >= ? OR ? IS NULL)\r\n              ORDER BY CONCAT(?, ?)\r\n              `;\r\n   \r\n     // Initialize the params array\r\n-    let params = [];\r\n+    //let params = [];\r\n   \r\n     // Check if the quantity parameter is not null or empty\r\n-    if (quantity) {\r\n-      // Append the where clause to the query string\r\n-      queryString += ` WHERE jt.quantity = ?`;\r\n+    // if (quantity) {\r\n+    //   // Append the where clause to the query string\r\n+    //   queryString += ` WHERE jt.quantity = ?`;\r\n   \r\n-      // Add the quantity parameter to the params array\r\n-      params.push(quantity);\r\n-    }\r\n+    //   // Add the quantity parameter to the params array\r\n+    //   params.push(quantity);\r\n+    // }\r\n   \r\n-    \r\n+    let params = [ quantity,OrderBy, SortDirection];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704694837164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n \r\n-  async get_orderItems(quantity: string, OrderBy: string, SortDirection: string,): Promise<OrderItem[]> {\r\n+  async get_orderItems(quantity: number, OrderBy: string, SortDirection: string,): Promise<OrderItem[]> {\r\n \r\n   \r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n"
                },
                {
                    "date": 1704694915331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n     //   // Add the quantity parameter to the params array\r\n     //   params.push(quantity);\r\n     // }\r\n   \r\n-    let params = [ quantity,OrderBy, SortDirection];\r\n+    let params = [ quantity,quantity,OrderBy, SortDirection];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704695124174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,23 +91,11 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY CONCAT(?, ?)\r\n+             ORDER BY ?, ?\r\n              `;\r\n   \r\n-    // Initialize the params array\r\n-    //let params = [];\r\n-  \r\n-    // Check if the quantity parameter is not null or empty\r\n-    // if (quantity) {\r\n-    //   // Append the where clause to the query string\r\n-    //   queryString += ` WHERE jt.quantity = ?`;\r\n-  \r\n-    //   // Add the quantity parameter to the params array\r\n-    //   params.push(quantity);\r\n-    // }\r\n-  \r\n     let params = [ quantity,quantity,OrderBy, SortDirection];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n"
                },
                {
                    "date": 1704695191601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n              (jt.quantity >= ? OR ? IS NULL)\r\n              ORDER BY ?, ?\r\n              `;\r\n   \r\n-    let params = [ quantity,quantity,OrderBy, SortDirection];\r\n+             let params = [ quantity,quantity,OrderBy, SortDirection, OrderBy, SortDirection];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704695363622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,12 +91,12 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY ?, ?\r\n+             ORDER BY CONCAT(?,  CAST(? AS SIGNED))\r\n              `;\r\n   \r\n-             let params = [ quantity,quantity,OrderBy, SortDirection, OrderBy, SortDirection];\r\n+    let params = [ quantity,quantity,OrderBy, SortDirection];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704695861461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY CONCAT(?,  CAST(? AS SIGNED))\r\n+             ORDER BY ? ?\r\n              `;\r\n   \r\n     let params = [ quantity,quantity,OrderBy, SortDirection];\r\n     // Execute the query with the params argument\r\n"
                },
                {
                    "date": 1704695930750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,12 +91,12 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY ? ?\r\n+             ORDER BY ? DESC\r\n              `;\r\n   \r\n-    let params = [ quantity,quantity,OrderBy, SortDirection];\r\n+    let params = [ quantity,quantity,OrderBy];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704696057948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY ? DESC\r\n+             ORDER BY quantity DESC\r\n              `;\r\n   \r\n     let params = [ quantity,quantity,OrderBy];\r\n     // Execute the query with the params argument\r\n"
                },
                {
                    "date": 1704696117257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY quantity DESC\r\n+             ORDER BY OrderBy DESC\r\n              `;\r\n   \r\n     let params = [ quantity,quantity,OrderBy];\r\n     // Execute the query with the params argument\r\n"
                },
                {
                    "date": 1704696128762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n \r\n-  async get_orderItems(quantity: number, OrderBy: string, SortDirection: string,): Promise<OrderItem[]> {\r\n+  async get_orderItems(quantity: number, OrderByCol: string, SortDirection: string,): Promise<OrderItem[]> {\r\n \r\n   \r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n@@ -91,9 +91,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY OrderBy DESC\r\n+             ORDER BY OrderByCol DESC\r\n              `;\r\n   \r\n     let params = [ quantity,quantity,OrderBy];\r\n     // Execute the query with the params argument\r\n"
                },
                {
                    "date": 1704696161453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,12 +91,12 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY OrderByCol DESC\r\n+             ORDER BY ? DESC\r\n              `;\r\n   \r\n-    let params = [ quantity,quantity,OrderBy];\r\n+    let params = [ quantity,quantity,OrderByCol];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704696233919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY ? DESC\r\n+             ORDER BY quantity DESC\r\n              `;\r\n   \r\n     let params = [ quantity,quantity,OrderByCol];\r\n     // Execute the query with the params argument\r\n"
                },
                {
                    "date": 1704696264919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,12 +91,12 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY quantity DESC\r\n+             ORDER BY quantity ?\r\n              `;\r\n   \r\n-    let params = [ quantity,quantity,OrderByCol];\r\n+    let params = [ quantity,quantity,OrderByCol,SortDirection];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704696317585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY quantity ?\r\n+             ORDER BY ? ?\r\n              `;\r\n   \r\n     let params = [ quantity,quantity,OrderByCol,SortDirection];\r\n     // Execute the query with the params argument\r\n"
                },
                {
                    "date": 1704696578971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,12 +91,12 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR ? IS NULL)\r\n-             ORDER BY ? ?\r\n+             ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    let params = [ quantity,quantity,OrderByCol,SortDirection];\r\n+    let params = [ quantity,quantity];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704696627826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,10 @@\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n-             (jt.quantity >= ? OR ? IS NULL)\r\n+             -- (jt.quantity >= ? OR ? IS NULL)\r\n+             (jt.quantity >= :quantity OR :quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n     let params = [ quantity,quantity];\r\n"
                },
                {
                    "date": 1704696762926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,10 @@\n              (jt.quantity >= :quantity OR :quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    let params = [ quantity,quantity];\r\n+    //let params = [ quantity,quantity];\r\n+    let params = { quantity: quantity}; // Use an \r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704696800243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,15 +90,13 @@\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n-             -- (jt.quantity >= ? OR ? IS NULL)\r\n-             (jt.quantity >= :quantity OR :quantity IS NULL)\r\n+             (jt.quantity >= ? OR ? IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    //let params = [ quantity,quantity];\r\n-    let params = { quantity: quantity}; // Use an \r\n+    let params = [ quantity,quantity];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704696808302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n-             (jt.quantity >= ? OR ? IS NULL)\r\n+             (jt.quantity >= ? OR quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n     let params = [ quantity,quantity];\r\n"
                },
                {
                    "date": 1704696838962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,8 @@\n     return orderItems;\r\n   }\r\n \r\n   async get_orderItems(quantity: number, OrderByCol: string, SortDirection: string,): Promise<OrderItem[]> {\r\n-\r\n   \r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity\r\n@@ -94,9 +93,9 @@\n              (jt.quantity >= ? OR quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    let params = [ quantity,quantity];\r\n+    let params = [ quantity];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704703277483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,25 +77,27 @@\n   async get_orderItems(quantity: number, OrderByCol: string, SortDirection: string,): Promise<OrderItem[]> {\r\n   \r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n-        jt.quantity AS order_item_quantity\r\n+        jt.quantity AS order_item_quantity,\r\n+        jt.title_fa AS product_title_fa,\r\n         FROM orders,\r\n              JSON_TABLE(\r\n                  order_content,\r\n                  '$.order_item[*]'\r\n                  COLUMNS (\r\n                   id INT PATH '$.id',\r\n-                  quantity INT PATH '$.quantity'\r\n+                  quantity INT PATH '$.quantity',\r\n+                  title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n              (jt.quantity >= ? OR quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    let params = [ quantity];\r\n+    let params = [quantity];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704703371056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,17 +78,17 @@\n   \r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity,\r\n-        jt.title_fa AS product_title_fa,\r\n+        jt.title_fa AS product_title_fa\r\n         FROM orders,\r\n              JSON_TABLE(\r\n                  order_content,\r\n                  '$.order_item[*]'\r\n                  COLUMNS (\r\n                   id INT PATH '$.id',\r\n                   quantity INT PATH '$.quantity',\r\n-                  title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+                  title_fa NVARCHAR(255) PATH '$.product.title_fa'\r\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n"
                },
                {
                    "date": 1704703501769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n \r\n-  async get_orderItems(quantity: number, OrderByCol: string, SortDirection: string,): Promise<OrderItem[]> {\r\n+  async get_orderItems(quantity: number,product_title_fa:string, OrderByCol: string, SortDirection: string,): Promise<OrderItem[]> {\r\n   \r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity,\r\n@@ -91,13 +91,15 @@\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n+             (jt.title_fa like OR title_fa IS NULL)\r\n+             AND\r\n              (jt.quantity >= ? OR quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    let params = [quantity];\r\n+    let params = [quantity,product_title_fa];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704703753937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n-             (jt.title_fa like OR title_fa IS NULL)\r\n+             (jt.title_fa like %?% OR title_fa IS NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704703822213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n \r\n-  async get_orderItems(quantity: number,product_title_fa:string, OrderByCol: string, SortDirection: string,): Promise<OrderItem[]> {\r\n+  async get_orderItems(product_title_fa:string,quantity: number, OrderByCol: string, SortDirection: string,): Promise<OrderItem[]> {\r\n   \r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity,\r\n"
                },
                {
                    "date": 1704703903867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n-             (jt.title_fa like %?% OR title_fa IS NULL)\r\n+             (jt.title_fa like % ? % OR title_fa IS NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704703929266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n              (jt.quantity >= ? OR quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    let params = [quantity,product_title_fa];\r\n+    let params = [product_title_fa,quantity];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704704023253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 AND\r\n-             (jt.title_fa like % ? % OR title_fa IS NULL)\r\n+             (jt.title_fa like % ? % OR product_title_fa IS NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704704044982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n              WHERE \r\n              1 = 1 AND\r\n              (jt.title_fa like % ? % OR product_title_fa IS NULL)\r\n              AND\r\n-             (jt.quantity >= ? OR quantity IS NULL)\r\n+             (jt.quantity >= ?)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n     let params = [product_title_fa,quantity];\r\n"
                },
                {
                    "date": 1704704053043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,10 @@\n                   title_fa NVARCHAR(255) PATH '$.product.title_fa'\r\n                  )\r\n              ) AS jt\r\n              WHERE \r\n-             1 = 1 AND\r\n+             1 = 1 \r\n+             AND\r\n              (jt.title_fa like % ? % OR product_title_fa IS NULL)\r\n              AND\r\n              (jt.quantity >= ?)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n"
                },
                {
                    "date": 1704704195065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like % ? % OR product_title_fa IS NULL)\r\n+             (jt.title_fa like '%?%' OR product_title_fa IS NULL)\r\n              AND\r\n              (jt.quantity >= ?)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704704225700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like '%?%' OR product_title_fa IS NULL)\r\n+             (jt.title_fa like '%?%' OR title_fa IS NULL)\r\n              AND\r\n              (jt.quantity >= ?)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704704283158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,11 +92,11 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like '%?%' OR title_fa IS NULL)\r\n+             (jt.title_fa like '%?%' OR title_fa IS NOT NULL)\r\n              AND\r\n-             (jt.quantity >= ?)\r\n+             (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n     let params = [product_title_fa,quantity];\r\n"
                },
                {
                    "date": 1704704714633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n+             AND\r\n              (jt.title_fa like '%?%' OR title_fa IS NOT NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n"
                },
                {
                    "date": 1704704803882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,15 +93,15 @@\n              WHERE \r\n              1 = 1 \r\n              AND\r\n              AND\r\n-             (jt.title_fa like '%?%' OR title_fa IS NOT NULL)\r\n+             (jt.title_fa like '%100%' OR title_fa IS NOT NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    let params = [product_title_fa,quantity];\r\n+    let params = [quantity];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704704847149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,8 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             AND\r\n              (jt.title_fa like '%100%' OR title_fa IS NOT NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n"
                },
                {
                    "date": 1704704891091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,15 +92,15 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like '%100%' OR title_fa IS NOT NULL)\r\n+             (jt.title_fa like '%?%' OR title_fa IS NOT NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    let params = [quantity];\r\n+    let params = [product_title_fa,quantity];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704704929149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like '%?%' OR title_fa IS NOT NULL)\r\n+             (jt.title_fa like %?% OR title_fa IS NOT NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704704961308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like %?% OR title_fa IS NOT NULL)\r\n+             (jt.title_fa like '%?%' OR title_fa IS NOT NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704705398039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like '%?%' OR title_fa IS NOT NULL)\r\n+             (jt.title_fa like %?% OR title_fa IS NOT NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704705612867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like %?% OR title_fa IS NOT NULL)\r\n+             (jt.title_fa like ? OR title_fa IS  NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704705983951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like ? OR title_fa IS  NULL)\r\n+             (jt.title_fa like %?% OR title_fa IS  NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704706040408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like %?% OR title_fa IS  NULL)\r\n+             (jt.title_fa like %$1% OR title_fa IS  NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704706264673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like %$1% OR title_fa IS  NULL)\r\n+             (jt.title_fa like %@0% OR title_fa IS  NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704706448364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like %@0% OR title_fa IS  NULL)\r\n+             (jt.title_fa like %:?% OR title_fa IS  NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n"
                },
                {
                    "date": 1704709283632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,15 +92,15 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like %:?% OR title_fa IS  NULL)\r\n+             (jt.title_fa like ? OR title_fa IS  NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n   \r\n-    let params = [product_title_fa,quantity];\r\n+    let params = [ \"%\" + product_title_fa + \"%\",quantity];\r\n     // Execute the query with the params argument\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n   \r\n     return orderItems;\r\n"
                },
                {
                    "date": 1704710665277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,10 +73,14 @@\n     const orderItems = await query.getRawMany();\r\n     return orderItems;\r\n   }\r\n \r\n-  async get_orderItems(product_title_fa:string,quantity: number, OrderByCol: string, SortDirection: string,): Promise<OrderItem[]> {\r\n-  \r\n+  async get_orderItems(\r\n+    product_title_fa: string,\r\n+    quantity: number,\r\n+    OrderByCol: string,\r\n+    SortDirection: string,\r\n+  ): Promise<OrderItem[]> {\r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity,\r\n         jt.title_fa AS product_title_fa\r\n@@ -97,16 +101,19 @@\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n              ORDER BY ${OrderByCol} ${SortDirection}\r\n              `;\r\n-  \r\n-    let params = [ \"%\" + product_title_fa + \"%\",quantity];\r\n+\r\n+    let params = ['%' + product_title_fa + '%', quantity];\r\n     // Execute the query with the params argument\r\n-    const orderItems = await this.orderItemRepository.query(queryString, params);\r\n-  \r\n+    const orderItems = await this.orderItemRepository.query(\r\n+      queryString,\r\n+      params,\r\n+    );\r\n+\r\n     return orderItems;\r\n   }\r\n-}  \r\n+}\r\n // }async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n //     const orderItems = await this.orderItemRepository.query(\r\n //       `SELECT\r\n //       jt.id AS order_item_id,\r\n"
                },
                {
                    "date": 1704711525925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,24 @@\n \r\n   async get_orderItems(\r\n     product_title_fa: string,\r\n     quantity: number,\r\n+    product_id: number,\r\n+    title_fa: string,\r\n+    title_en: string,\r\n+    brand: string,\r\n+    category: string,\r\n+    item_category2: string,\r\n+    item_category3: string,\r\n+    rrp_price: number,\r\n+    selling_price: number,\r\n+    discount_percent: number,\r\n+    is_incredible: boolean,\r\n+    is_promotion: boolean,\r\n+    bnpl_active: boolean,\r\n+    seller_id: number,\r\n+    seller_title: string,\r\n+    seller_code: string,\r\n     OrderByCol: string,\r\n     SortDirection: string,\r\n   ): Promise<OrderItem[]> {\r\n     let queryString = `SELECT\r\n"
                },
                {
                    "date": 1704714541857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,43 +92,123 @@\n     bnpl_active: boolean,\r\n     seller_id: number,\r\n     seller_title: string,\r\n     seller_code: string,\r\n-    OrderByCol: string,\r\n-    SortDirection: string,\r\n+    sortColumn: string,\r\n+    sortType: string,\r\n   ): Promise<OrderItem[]> {\r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity,\r\n-        jt.title_fa AS product_title_fa\r\n+        jt.title_fa AS product_title_fa,\r\n+        jt.product_id AS product_id,\r\n+        jt.title_en AS title_en,\r\n+        jt.brand AS brand,\r\n+        jt.category AS category,\r\n+        jt.item_category2 AS item_category2,\r\n+        jt.item_category3 AS item_category3,\r\n+        jt.rrp_price AS rrp_price,\r\n+        jt.selling_price AS selling_price,\r\n+        jt.discount_percent AS discount_percent,\r\n+        jt.is_incredible AS is_incredible,\r\n+        jt.is_promotion AS is_promotion,\r\n+        jt.bnpl_active AS bnpl_active,\r\n+        jt.seller_id AS seller_id,\r\n+        jt.seller_title AS seller_title,\r\n+        jt.seller_code AS seller_code\r\n         FROM orders,\r\n              JSON_TABLE(\r\n                  order_content,\r\n                  '$.order_item[*]'\r\n                  COLUMNS (\r\n                   id INT PATH '$.id',\r\n                   quantity INT PATH '$.quantity',\r\n-                  title_fa NVARCHAR(255) PATH '$.product.title_fa'\r\n+                  title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n+                  product_id INT PATH '$.product.id',\r\n+                  title_en NVARCHAR(255) PATH '$.product.title_en',\r\n+                  brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n+                  category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n+                  item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n+                  item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n+                  rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n+                  selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n+                  discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n+                  is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n+                  is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n+                  bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n+                  seller_id INT PATH '$.variant.seller.id',\r\n+                  seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n+                  seller_code NVARCHAR(255) PATH '$.variant.seller.code'\r\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ? OR title_fa IS  NULL)\r\n              AND\r\n              (jt.quantity >= ? OR quantity IS NOT NULL)\r\n-             ORDER BY ${OrderByCol} ${SortDirection}\r\n+             AND\r\n+             (jt.product_id = ? OR product_id IS NULL)\r\n+             AND\r\n+             (jt.title_en like ? OR title_en IS NULL)\r\n+             AND\r\n+             (jt.brand like ? OR brand IS NULL)\r\n+             AND\r\n+             (jt.category like ? OR category IS NULL)\r\n+             AND\r\n+             (jt.item_category2 like ? OR item_category2 IS NULL)\r\n+             AND\r\n+             (jt.item_category3 like ? OR item_category3 IS NULL)\r\n+             AND\r\n+             (jt.rrp_price = ? OR rrp_price IS NULL)\r\n+             AND\r\n+             (jt.selling_price = ? OR selling_price IS NULL)\r\n+             AND\r\n+             (jt.discount_percent = ? OR discount_percent IS NULL)\r\n+             AND\r\n+             (jt.is_incredible = ? OR is_incredible IS NULL)\r\n+             AND\r\n+             (jt.is_promotion = ? OR is_promotion IS NULL)\r\n+             AND\r\n+             (jt.bnpl_active = ? OR bnpl_active IS NULL)\r\n+             AND\r\n+             (jt.seller_id = ? OR seller_id IS NULL)\r\n+             AND\r\n+             (jt.seller_title like ? OR seller_title IS NULL)\r\n+             AND\r\n+             (jt.seller_code like ? OR seller_code IS NULL)\r\n+             ORDER BY\r\n+             CASE WHEN ? IS NOT NULL THEN ? END ?\r\n              `;\r\n-\r\n-    let params = ['%' + product_title_fa + '%', quantity];\r\n-    // Execute the query with the params argument\r\n-    const orderItems = await this.orderItemRepository.query(\r\n-      queryString,\r\n-      params,\r\n-    );\r\n-\r\n+  \r\n+    let params = [\r\n+      '%' + product_title_fa + '%', \r\n+      quantity, \r\n+      product_id, \r\n+      '%' + title_en + '%', \r\n+      '%' + brand + '%', \r\n+      '%' + category + '%', \r\n+      '%' + item_category2 + '%', \r\n+      '%' + item_category3 + '%', \r\n+      rrp_price, \r\n+      selling_price, \r\n+      discount_percent, \r\n+      is_incredible, \r\n+      is_promotion, \r\n+      bnpl_active, \r\n+      seller_id, \r\n+      '%' + seller_title + '%', \r\n+      '%' + seller_code + '%', \r\n+      sortColumn, \r\n+      sortColumn, \r\n+      sortType\r\n+    ];\r\n+  \r\n+    // Execute the query with the params array\r\n+    const orderItems = await this.orderItemRepository.query(queryString, params);\r\n     return orderItems;\r\n   }\r\n+  \r\n }\r\n // }async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n //     const orderItems = await this.orderItemRepository.query(\r\n //       `SELECT\r\n"
                },
                {
                    "date": 1704714871738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,10 +77,9 @@\n   async get_orderItems(\r\n     product_title_fa: string,\r\n     quantity: number,\r\n     product_id: number,\r\n-    title_fa: string,\r\n-    title_en: string,\r\n+    product_title_en: string,\r\n     brand: string,\r\n     category: string,\r\n     item_category2: string,\r\n     item_category3: string,\r\n@@ -183,9 +182,9 @@\n     let params = [\r\n       '%' + product_title_fa + '%', \r\n       quantity, \r\n       product_id, \r\n-      '%' + title_en + '%', \r\n+      '%' + product_title_en + '%', \r\n       '%' + brand + '%', \r\n       '%' + category + '%', \r\n       '%' + item_category2 + '%', \r\n       '%' + item_category3 + '%', \r\n"
                },
                {
                    "date": 1704715188867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,10 +174,9 @@\n              AND\r\n              (jt.seller_title like ? OR seller_title IS NULL)\r\n              AND\r\n              (jt.seller_code like ? OR seller_code IS NULL)\r\n-             ORDER BY\r\n-             CASE WHEN ? IS NOT NULL THEN ? END ?\r\n+             ORDER BY ${sortColumn} ${sortType}\r\n              `;\r\n   \r\n     let params = [\r\n       '%' + product_title_fa + '%', \r\n"
                },
                {
                    "date": 1704715651025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,23 +78,23 @@\n     product_title_fa: string,\r\n     quantity: number,\r\n     product_id: number,\r\n     product_title_en: string,\r\n-    brand: string,\r\n-    category: string,\r\n-    item_category2: string,\r\n-    item_category3: string,\r\n-    rrp_price: number,\r\n-    selling_price: number,\r\n-    discount_percent: number,\r\n-    is_incredible: boolean,\r\n-    is_promotion: boolean,\r\n-    bnpl_active: boolean,\r\n-    seller_id: number,\r\n-    seller_title: string,\r\n-    seller_code: string,\r\n-    sortColumn: string,\r\n-    sortType: string,\r\n+    // brand: string,\r\n+    // category: string,\r\n+    // item_category2: string,\r\n+    // item_category3: string,\r\n+    // rrp_price: number,\r\n+    // selling_price: number,\r\n+    // discount_percent: number,\r\n+    // is_incredible: boolean,\r\n+    // is_promotion: boolean,\r\n+    // bnpl_active: boolean,\r\n+    // seller_id: number,\r\n+    // seller_title: string,\r\n+    // seller_code: string,\r\n+    // sortColumn: string,\r\n+    // sortType: string,\r\n   ): Promise<OrderItem[]> {\r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity,\r\n"
                },
                {
                    "date": 1704715663271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,10 +91,10 @@\n     // bnpl_active: boolean,\r\n     // seller_id: number,\r\n     // seller_title: string,\r\n     // seller_code: string,\r\n-    // sortColumn: string,\r\n-    // sortType: string,\r\n+    sortColumn: string,\r\n+    sortType: string,\r\n   ): Promise<OrderItem[]> {\r\n     let queryString = `SELECT\r\n         jt.id AS order_item_id,\r\n         jt.quantity AS order_item_quantity,\r\n"
                },
                {
                    "date": 1704715683540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,55 +148,30 @@\n              AND\r\n              (jt.product_id = ? OR product_id IS NULL)\r\n              AND\r\n              (jt.title_en like ? OR title_en IS NULL)\r\n-             AND\r\n-             (jt.brand like ? OR brand IS NULL)\r\n-             AND\r\n-             (jt.category like ? OR category IS NULL)\r\n-             AND\r\n-             (jt.item_category2 like ? OR item_category2 IS NULL)\r\n-             AND\r\n-             (jt.item_category3 like ? OR item_category3 IS NULL)\r\n-             AND\r\n-             (jt.rrp_price = ? OR rrp_price IS NULL)\r\n-             AND\r\n-             (jt.selling_price = ? OR selling_price IS NULL)\r\n-             AND\r\n-             (jt.discount_percent = ? OR discount_percent IS NULL)\r\n-             AND\r\n-             (jt.is_incredible = ? OR is_incredible IS NULL)\r\n-             AND\r\n-             (jt.is_promotion = ? OR is_promotion IS NULL)\r\n-             AND\r\n-             (jt.bnpl_active = ? OR bnpl_active IS NULL)\r\n-             AND\r\n-             (jt.seller_id = ? OR seller_id IS NULL)\r\n-             AND\r\n-             (jt.seller_title like ? OR seller_title IS NULL)\r\n-             AND\r\n-             (jt.seller_code like ? OR seller_code IS NULL)\r\n+          \r\n              ORDER BY ${sortColumn} ${sortType}\r\n              `;\r\n   \r\n     let params = [\r\n       '%' + product_title_fa + '%', \r\n       quantity, \r\n       product_id, \r\n       '%' + product_title_en + '%', \r\n-      '%' + brand + '%', \r\n-      '%' + category + '%', \r\n-      '%' + item_category2 + '%', \r\n-      '%' + item_category3 + '%', \r\n-      rrp_price, \r\n-      selling_price, \r\n-      discount_percent, \r\n-      is_incredible, \r\n-      is_promotion, \r\n-      bnpl_active, \r\n-      seller_id, \r\n-      '%' + seller_title + '%', \r\n-      '%' + seller_code + '%', \r\n+    //   '%' + brand + '%', \r\n+    //   '%' + category + '%', \r\n+    //   '%' + item_category2 + '%', \r\n+    //   '%' + item_category3 + '%', \r\n+    //   rrp_price, \r\n+    //   selling_price, \r\n+    //   discount_percent, \r\n+    //   is_incredible, \r\n+    //   is_promotion, \r\n+    //   bnpl_active, \r\n+    //   seller_id, \r\n+    //   '%' + seller_title + '%', \r\n+    //   '%' + seller_code + '%', \r\n       sortColumn, \r\n       sortColumn, \r\n       sortType\r\n     ];\r\n"
                },
                {
                    "date": 1704716033709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n     let params = [\r\n       '%' + product_title_fa + '%', \r\n       quantity, \r\n       product_id, \r\n-      '%' + product_title_en + '%', \r\n+      product_title_en ? `%${product_title_en}%` : product_title_en,\r\n     //   '%' + brand + '%', \r\n     //   '%' + category + '%', \r\n     //   '%' + item_category2 + '%', \r\n     //   '%' + item_category3 + '%', \r\n"
                },
                {
                    "date": 1704716189519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n     let params = [\r\n       '%' + product_title_fa + '%', \r\n       quantity, \r\n       product_id, \r\n-      product_title_en ? `%${product_title_en}%` : product_title_en,\r\n+      product_title_en ?? '%' + product_title_en + '%',\r\n     //   '%' + brand + '%', \r\n     //   '%' + category + '%', \r\n     //   '%' + item_category2 + '%', \r\n     //   '%' + item_category3 + '%', \r\n"
                },
                {
                    "date": 1704716488226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,10 @@\n     let params = [\r\n       '%' + product_title_fa + '%', \r\n       quantity, \r\n       product_id, \r\n-      product_title_en ?? '%' + product_title_en + '%',\r\n+      //product_title_en ?? '%' + product_title_en + '%',\r\n+      product_title_en ? `%${product_title_en}%` : product_title_en,\r\n     //   '%' + brand + '%', \r\n     //   '%' + category + '%', \r\n     //   '%' + item_category2 + '%', \r\n     //   '%' + item_category3 + '%', \r\n"
                },
                {
                    "date": 1704716563357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,9 +157,9 @@\n       '%' + product_title_fa + '%', \r\n       quantity, \r\n       product_id, \r\n       //product_title_en ?? '%' + product_title_en + '%',\r\n-      product_title_en ? `%${product_title_en}%` : product_title_en,\r\n+      product_title_en ? `%${product_title_en}%` : `*`,\r\n     //   '%' + brand + '%', \r\n     //   '%' + category + '%', \r\n     //   '%' + item_category2 + '%', \r\n     //   '%' + item_category3 + '%', \r\n"
                },
                {
                    "date": 1704716648639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,9 +157,9 @@\n       '%' + product_title_fa + '%', \r\n       quantity, \r\n       product_id, \r\n       //product_title_en ?? '%' + product_title_en + '%',\r\n-      product_title_en ? `%${product_title_en}%` : `*`,\r\n+      product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   '%' + brand + '%', \r\n     //   '%' + category + '%', \r\n     //   '%' + item_category2 + '%', \r\n     //   '%' + item_category3 + '%', \r\n"
                },
                {
                    "date": 1704717418371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,39 +143,16 @@\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ? OR title_fa IS  NULL)\r\n              AND\r\n-             (jt.quantity >= ? OR quantity IS NOT NULL)\r\n-             AND\r\n-             (jt.product_id = ? OR product_id IS NULL)\r\n-             AND\r\n-             (jt.title_en like ? OR title_en IS NULL)\r\n-          \r\n-             ORDER BY ${sortColumn} ${sortType}\r\n+             (jt.quantity = ? OR quantity IS NOT NULL)\r\n+           \r\n              `;\r\n   \r\n     let params = [\r\n-      '%' + product_title_fa + '%', \r\n-      quantity, \r\n-      product_id, \r\n-      //product_title_en ?? '%' + product_title_en + '%',\r\n-      product_title_en ? `%${product_title_en}%` : `%`,\r\n-    //   '%' + brand + '%', \r\n-    //   '%' + category + '%', \r\n-    //   '%' + item_category2 + '%', \r\n-    //   '%' + item_category3 + '%', \r\n-    //   rrp_price, \r\n-    //   selling_price, \r\n-    //   discount_percent, \r\n-    //   is_incredible, \r\n-    //   is_promotion, \r\n-    //   bnpl_active, \r\n-    //   seller_id, \r\n-    //   '%' + seller_title + '%', \r\n-    //   '%' + seller_code + '%', \r\n-      sortColumn, \r\n-      sortColumn, \r\n-      sortType\r\n+      product_title_fa ? `%${product_title_fa}%` : `%`,\r\n+      quantity ? `%${quantity}%` : `quantity`,\r\n+      \r\n     ];\r\n   \r\n     // Execute the query with the params array\r\n     const orderItems = await this.orderItemRepository.query(queryString, params);\r\n"
                },
                {
                    "date": 1704717507518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,11 +141,11 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like ? OR title_fa IS  NULL)\r\n+             (jt.title_fa like)\r\n              AND\r\n-             (jt.quantity = ? OR quantity IS NOT NULL)\r\n+             (jt.quantity = ? )\r\n            \r\n              `;\r\n   \r\n     let params = [\r\n"
                },
                {
                    "date": 1704717513021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n              AND\r\n-             (jt.title_fa like)\r\n+             (jt.title_fa like ?)\r\n              AND\r\n              (jt.quantity = ? )\r\n            \r\n              `;\r\n"
                },
                {
                    "date": 1704717578609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n              `;\r\n   \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n-      quantity ? `%${quantity}%` : `quantity`,\r\n+      quantity ? `${quantity}` : `quantity`,\r\n       \r\n     ];\r\n   \r\n     // Execute the query with the params array\r\n"
                },
                {
                    "date": 1704718023708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,21 +78,21 @@\n     product_title_fa: string,\r\n     quantity: number,\r\n     product_id: number,\r\n     product_title_en: string,\r\n-    // brand: string,\r\n-    // category: string,\r\n-    // item_category2: string,\r\n-    // item_category3: string,\r\n-    // rrp_price: number,\r\n-    // selling_price: number,\r\n-    // discount_percent: number,\r\n-    // is_incredible: boolean,\r\n-    // is_promotion: boolean,\r\n-    // bnpl_active: boolean,\r\n-    // seller_id: number,\r\n-    // seller_title: string,\r\n-    // seller_code: string,\r\n+    brand: string,\r\n+    category: string,\r\n+    item_category2: string,\r\n+    item_category3: string,\r\n+    rrp_price: number,\r\n+    selling_price: number,\r\n+    discount_percent: number,\r\n+    is_incredible: boolean,\r\n+    is_promotion: boolean,\r\n+    bnpl_active: boolean,\r\n+    seller_id: number,\r\n+    seller_title: string,\r\n+    seller_code: string,\r\n     sortColumn: string,\r\n     sortType: string,\r\n   ): Promise<OrderItem[]> {\r\n     let queryString = `SELECT\r\n@@ -145,21 +145,40 @@\n              (jt.title_fa like ?)\r\n              AND\r\n              (jt.quantity = ? )\r\n            \r\n+             ORDER BY ${sortColumn} ${sortType}\r\n              `;\r\n-  \r\n+\r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       quantity ? `${quantity}` : `quantity`,\r\n-      \r\n+      product_id ? `${product_id}` : `product_id`,\r\n+      product_title_en ? `%${product_title_en}%` : `%`,\r\n+      brand ? `%${brand}%` : `%`,\r\n+      category ? `%${category}%` : `%`,\r\n+      item_category2 ? `%${item_category2}%` : `%`,\r\n+      item_category3 ? `%${item_category3}%` : `%`,\r\n+      rrp_price ? `${rrp_price}` : `rrp_price`,\r\n+      selling_price ? `${selling_price}` : `selling_price`,\r\n+      discount_percent ? `${discount_percent}` : `discount_percent`,\r\n+      is_incredible ? `${is_incredible}` : `is_incredible`,\r\n+      is_promotion ? `${is_promotion}` : `is_promotion`,\r\n+      bnpl_active ? `${bnpl_active}` : `bnpl_active`,\r\n+      seller_id ? `${seller_id}` : `seller_id`,\r\n+      seller_title ? `%${seller_title}%` : `%`,\r\n+      seller_code ? `%${seller_code}%` : `%`,\r\n+      sortColumn,\r\n+      sortType,\r\n     ];\r\n-  \r\n+\r\n     // Execute the query with the params array\r\n-    const orderItems = await this.orderItemRepository.query(queryString, params);\r\n+    const orderItems = await this.orderItemRepository.query(\r\n+      queryString,\r\n+      params,\r\n+    );\r\n     return orderItems;\r\n   }\r\n-  \r\n }\r\n // }async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n //     const orderItems = await this.orderItemRepository.query(\r\n //       `SELECT\r\n"
                },
                {
                    "date": 1704718171863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,8 +144,38 @@\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n              (jt.quantity = ? )\r\n+              AND\r\n+             (jt.product_id = ? ) \r\n+             AND\r\n+             (jt.title_en like ? ) \r\n+             AND\r\n+             (jt.brand = ? ) \r\n+             AND\r\n+             (jt.category = ? ) \r\n+             AND\r\n+             (jt.item_category2 = ? ) \r\n+             AND\r\n+             (jt.item_category3 = ? ) \r\n+             AND\r\n+             (jt. = ? ) \r\n+             AND\r\n+             (jt. = ? ) \r\n+             AND\r\n+             (jt. = ? ) \r\n+             AND\r\n+             (jt. = ? ) \r\n+             AND\r\n+             (jt. = ? ) \r\n+             AND\r\n+             (jt. = ? ) \r\n+             AND\r\n+             (jt. = ? ) \r\n+             AND\r\n+             (jt. = ? ) \r\n+             AND\r\n+             (jt. = ? )\r\n            \r\n              ORDER BY ${sortColumn} ${sortType}\r\n              `;\r\n \r\n"
                },
                {
                    "date": 1704718256768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,33 +149,33 @@\n              (jt.product_id = ? ) \r\n              AND\r\n              (jt.title_en like ? ) \r\n              AND\r\n-             (jt.brand = ? ) \r\n+             (jt.brand like ? ) \r\n              AND\r\n-             (jt.category = ? ) \r\n+             (jt.category like ? ) \r\n              AND\r\n-             (jt.item_category2 = ? ) \r\n+             (jt.item_category2 like ? ) \r\n              AND\r\n-             (jt.item_category3 = ? ) \r\n+             (jt.item_category3 like ? ) \r\n              AND\r\n-             (jt. = ? ) \r\n+             (jt.rrp_price = ? ) \r\n              AND\r\n-             (jt. = ? ) \r\n+             (jt.selling_price = ? ) \r\n              AND\r\n-             (jt. = ? ) \r\n+             (jt.discount_percent = ? ) \r\n              AND\r\n-             (jt. = ? ) \r\n+             (jt.is_incredible = ? ) \r\n              AND\r\n-             (jt. = ? ) \r\n+             (jt.is_promotion = ? ) \r\n              AND\r\n-             (jt. = ? ) \r\n+             (jt.bnpl_active = ? ) \r\n              AND\r\n-             (jt. = ? ) \r\n+             (jt.seller_id = ? ) \r\n              AND\r\n-             (jt. = ? ) \r\n+             (jt.seller_title like ? ) \r\n              AND\r\n-             (jt. = ? )\r\n+             (jt.seller_code = ? )\r\n            \r\n              ORDER BY ${sortColumn} ${sortType}\r\n              `;\r\n \r\n"
                },
                {
                    "date": 1704718320220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n       is_promotion ? `${is_promotion}` : `is_promotion`,\r\n       bnpl_active ? `${bnpl_active}` : `bnpl_active`,\r\n       seller_id ? `${seller_id}` : `seller_id`,\r\n       seller_title ? `%${seller_title}%` : `%`,\r\n-      seller_code ? `%${seller_code}%` : `%`,\r\n+      seller_code ? `${seller_code}` : `seller_code`,\r\n       sortColumn,\r\n       sortType,\r\n     ];\r\n \r\n"
                },
                {
                    "date": 1704718658670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n-             (jt.quantity = ? )\r\n+             (jt.quantity = ? or jt.quantity is not null )\r\n               AND\r\n              (jt.product_id = ? ) \r\n              AND\r\n              (jt.title_en like ? ) \r\n"
                },
                {
                    "date": 1704718790602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,9 +180,9 @@\n              `;\r\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n-      quantity ? `${quantity}` : `quantity`,\r\n+      quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       product_id ? `${product_id}` : `product_id`,\r\n       product_title_en ? `%${product_title_en}%` : `%`,\r\n       brand ? `%${brand}%` : `%`,\r\n       category ? `%${category}%` : `%`,\r\n"
                },
                {
                    "date": 1704722292249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n-             (jt.quantity = ? or jt.quantity is not null )\r\n+             (jt.quantity = ?  )\r\n               AND\r\n              (jt.product_id = ? ) \r\n              AND\r\n              (jt.title_en like ? ) \r\n@@ -181,23 +181,23 @@\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       quantity ? `${quantity}` : `0 or quantity is not null`,\r\n-      product_id ? `${product_id}` : `product_id`,\r\n-      product_title_en ? `%${product_title_en}%` : `%`,\r\n-      brand ? `%${brand}%` : `%`,\r\n-      category ? `%${category}%` : `%`,\r\n-      item_category2 ? `%${item_category2}%` : `%`,\r\n-      item_category3 ? `%${item_category3}%` : `%`,\r\n-      rrp_price ? `${rrp_price}` : `rrp_price`,\r\n-      selling_price ? `${selling_price}` : `selling_price`,\r\n-      discount_percent ? `${discount_percent}` : `discount_percent`,\r\n-      is_incredible ? `${is_incredible}` : `is_incredible`,\r\n-      is_promotion ? `${is_promotion}` : `is_promotion`,\r\n-      bnpl_active ? `${bnpl_active}` : `bnpl_active`,\r\n-      seller_id ? `${seller_id}` : `seller_id`,\r\n-      seller_title ? `%${seller_title}%` : `%`,\r\n-      seller_code ? `${seller_code}` : `seller_code`,\r\n+      product_id ? `${product_id}` : `0 or product_id is not null`,\r\n+    //   product_title_en ? `%${product_title_en}%` : `%`,\r\n+    //   brand ? `%${brand}%` : `%`,\r\n+    //   category ? `%${category}%` : `%`,\r\n+    //   item_category2 ? `%${item_category2}%` : `%`,\r\n+    //   item_category3 ? `%${item_category3}%` : `%`,\r\n+    //   rrp_price ? `${rrp_price}` : `rrp_price`,\r\n+    //   selling_price ? `${selling_price}` : `selling_price`,\r\n+    //   discount_percent ? `${discount_percent}` : `discount_percent`,\r\n+    //   is_incredible ? `${is_incredible}` : `is_incredible`,\r\n+    //   is_promotion ? `${is_promotion}` : `is_promotion`,\r\n+    //   bnpl_active ? `${bnpl_active}` : `bnpl_active`,\r\n+    //   seller_id ? `${seller_id}` : `seller_id`,\r\n+    //   seller_title ? `%${seller_title}%` : `%`,\r\n+    //   seller_code ? `${seller_code}` : `seller_code`,\r\n       sortColumn,\r\n       sortType,\r\n     ];\r\n \r\n"
                },
                {
                    "date": 1704722355168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,37 +146,9 @@\n              AND\r\n              (jt.quantity = ?  )\r\n               AND\r\n              (jt.product_id = ? ) \r\n-             AND\r\n-             (jt.title_en like ? ) \r\n-             AND\r\n-             (jt.brand like ? ) \r\n-             AND\r\n-             (jt.category like ? ) \r\n-             AND\r\n-             (jt.item_category2 like ? ) \r\n-             AND\r\n-             (jt.item_category3 like ? ) \r\n-             AND\r\n-             (jt.rrp_price = ? ) \r\n-             AND\r\n-             (jt.selling_price = ? ) \r\n-             AND\r\n-             (jt.discount_percent = ? ) \r\n-             AND\r\n-             (jt.is_incredible = ? ) \r\n-             AND\r\n-             (jt.is_promotion = ? ) \r\n-             AND\r\n-             (jt.bnpl_active = ? ) \r\n-             AND\r\n-             (jt.seller_id = ? ) \r\n-             AND\r\n-             (jt.seller_title like ? ) \r\n-             AND\r\n-             (jt.seller_code = ? )\r\n-           \r\n+             \r\n              ORDER BY ${sortColumn} ${sortType}\r\n              `;\r\n \r\n     let params = [\r\n"
                },
                {
                    "date": 1704722489812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,9 +152,9 @@\n              `;\r\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n-      quantity ? `${quantity}` : `0 or quantity is not null`,\r\n+      quantity ? `${quantity}` : `0'' or quantity is not null`,\r\n       product_id ? `${product_id}` : `0 or product_id is not null`,\r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n     //   category ? `%${category}%` : `%`,\r\n"
                },
                {
                    "date": 1704722849074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,16 +145,17 @@\n              (jt.title_fa like ?)\r\n              AND\r\n              (jt.quantity = ?  )\r\n               AND\r\n-             (jt.product_id = ? ) \r\n+              (jt.quantity = ? OR quantity IS NOT NULL)\r\n+\r\n              \r\n              ORDER BY ${sortColumn} ${sortType}\r\n              `;\r\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n-      quantity ? `${quantity}` : `0'' or quantity is not null`,\r\n+      quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       product_id ? `${product_id}` : `0 or product_id is not null`,\r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n     //   category ? `%${category}%` : `%`,\r\n"
                },
                {
                    "date": 1704722856516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,9 @@\n              (jt.title_fa like ?)\r\n              AND\r\n              (jt.quantity = ?  )\r\n               AND\r\n-              (jt.quantity = ? OR quantity IS NOT NULL)\r\n+              (jt.product_id = ? OR product_id IS NOT NULL)\r\n \r\n              \r\n              ORDER BY ${sortColumn} ${sortType}\r\n              `;\r\n"
                },
                {
                    "date": 1704722878781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,11 @@\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       quantity ? `${quantity}` : `0 or quantity is not null`,\r\n-      product_id ? `${product_id}` : `0 or product_id is not null`,\r\n+      //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n+      product_id = product_id ?? null,\r\n+\r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n     //   category ? `%${category}%` : `%`,\r\n     //   item_category2 ? `%${item_category2}%` : `%`,\r\n"
                },
                {
                    "date": 1704722951588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n-             (jt.quantity = ?  )\r\n+             (jt.quantity = ?  OR quantity IS NOT NULL)\r\n               AND\r\n               (jt.product_id = ? OR product_id IS NOT NULL)\r\n \r\n              \r\n@@ -153,10 +153,11 @@\n              `;\r\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n-      quantity ? `${quantity}` : `0 or quantity is not null`,\r\n+      //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n+      quantity = quantity ?? null,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n"
                },
                {
                    "date": 1704723376362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n-             (jt.quantity = ?  OR quantity IS NOT NULL)\r\n+             (jt.quantity = ? )\r\n               AND\r\n               (jt.product_id = ? OR product_id IS NOT NULL)\r\n \r\n              \r\n@@ -155,9 +155,10 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity = quantity ?? null,\r\n+      //quantity = quantity ?? null,\r\n+       quantity = quantity ?? null,`'0'` + ` or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n"
                },
                {
                    "date": 1704723482253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n       //quantity = quantity ?? null,\r\n-       quantity = quantity ?? null,`'0'` + ` or quantity is not null`,\r\n+       quantity ? `${quantity}`:`'0'` + ` or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n"
                },
                {
                    "date": 1704723536111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n       //quantity = quantity ?? null,\r\n-       quantity ? `${quantity}`:`'0'` + ` or quantity is not null`,\r\n+       quantity ? `${quantity}`:`'0` + ` or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n"
                },
                {
                    "date": 1704723576838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n       //quantity = quantity ?? null,\r\n-       quantity ? `${quantity}`:`'0` + ` or quantity is not null`,\r\n+       quantity ? `${quantity}`:`0'` + ` or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n"
                },
                {
                    "date": 1704723616564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n       //quantity = quantity ?? null,\r\n-       quantity ? `${quantity}`:`0'` + ` or quantity is not null`,\r\n+       quantity ? `${quantity}`:`0'` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n"
                },
                {
                    "date": 1704723680132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n       //quantity = quantity ?? null,\r\n-       quantity ? `${quantity}`:`0'` + ` 'or quantity is not null`,\r\n+       quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n"
                },
                {
                    "date": 1704723826138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,10 +155,10 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      //quantity = quantity ?? null,\r\n-       quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n+       quantity ?? null,\r\n+       //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n     //   brand ? `%${brand}%` : `%`,\r\n"
                },
                {
                    "date": 1704724237803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,9 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-       quantity ?? null,\r\n+      quantity ? `${quantity}` : `0 or quantity is not null`,\r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n"
                },
                {
                    "date": 1704724617349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,9 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity ? `${quantity}` : `0 or quantity is not null`,\r\n+      quantity ? `${quantity}` : `quantity or quantity is not null`,\r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n"
                },
                {
                    "date": 1704724794010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,10 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity ? `${quantity}` : `quantity or quantity is not null`,\r\n+      //quantity ? `${quantity}` : `quantity or quantity is not null`,\r\n+      quantity ? `or quantity is not null` : ``,\r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n"
                },
                {
                    "date": 1704724883411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,10 +155,10 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      //quantity ? `${quantity}` : `quantity or quantity is not null`,\r\n-      quantity ? `or quantity is not null` : ``,\r\n+      quantity ? `${quantity}` : `quantity' or quantity is not null`,\r\n+     \r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n     //   product_title_en ? `%${product_title_en}%` : `%`,\r\n"
                },
                {
                    "date": 1704724939229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,9 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity ? `${quantity}` : `quantity' or quantity is not null`,\r\n+      quantity ? `${quantity}` : `quantity\\'' or quantity is not null`,\r\n      \r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n"
                },
                {
                    "date": 1704725171492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,9 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity ? `${quantity}` : `quantity\\'' or quantity is not null`,\r\n+      quantity ? `jt.quantity =${quantity}` : `quantity is not null`,\r\n      \r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n"
                },
                {
                    "date": 1704725533409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n-             (jt.quantity = ? )\r\n+             ( ? )\r\n               AND\r\n               (jt.product_id = ? OR product_id IS NOT NULL)\r\n \r\n              \r\n@@ -155,9 +155,9 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity ? `jt.quantity =${quantity}` : `quantity is not null`,\r\n+      quantity ? () => `jt.quantity = ${quantity}` : () => `quantity is not null`,\r\n      \r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n"
                },
                {
                    "date": 1704725579371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,9 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity ? () => `jt.quantity = ${quantity}` : () => `quantity is not null`,\r\n+      quantity ? () => `jt.quantity = ${quantity}` : () => `1=1`,\r\n      \r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n"
                },
                {
                    "date": 1704725691838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,9 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity ? () => `jt.quantity = ${quantity}` : () => `1=1`,\r\n+      quantity ? () => `jt.quantity = ${quantity}` : `1=1`,\r\n      \r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n"
                },
                {
                    "date": 1704725750016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,9 @@\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity ? () => `jt.quantity = ${quantity}` : `1=1`,\r\n+      quantity ? `jt.quantity = ${quantity}` : `1=1`,\r\n      \r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n"
                },
                {
                    "date": 1704725964507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n-             ( ? )\r\n+             (jt.quantity like ?)\r\n               AND\r\n               (jt.product_id = ? OR product_id IS NOT NULL)\r\n \r\n              \r\n@@ -153,11 +153,12 @@\n              `;\r\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n+      quantity ? `${quantity}` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      quantity ? `jt.quantity = ${quantity}` : `1=1`,\r\n+      //quantity ? `jt.quantity = ${quantity}` : `1=1`,\r\n      \r\n        //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n       product_id = product_id ?? null,\r\n \r\n"
                },
                {
                    "date": 1704726058009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n-             (jt.quantity like ?)\r\n+             (jt.quantity between ?)\r\n               AND\r\n               (jt.product_id = ? OR product_id IS NOT NULL)\r\n \r\n              \r\n@@ -153,9 +153,9 @@\n              `;\r\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n-      quantity ? `${quantity}` : `%`,\r\n+      quantity ? `${quantity} and ${quantity}` : `1 and 1000000000000000000`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n       //quantity ? `jt.quantity = ${quantity}` : `1=1`,\r\n      \r\n"
                },
                {
                    "date": 1704726237867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n              1 = 1 \r\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n-             (jt.quantity between ?)\r\n+             (jt.quantity like ?)\r\n               AND\r\n               (jt.product_id = ? OR product_id IS NOT NULL)\r\n \r\n              \r\n@@ -153,9 +153,9 @@\n              `;\r\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n-      quantity ? `${quantity} and ${quantity}` : `1 and 1000000000000000000`,\r\n+      quantity ? `${quantity}` : `%`,\r\n       //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n       //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n       //quantity ? `jt.quantity = ${quantity}` : `1=1`,\r\n      \r\n"
                },
                {
                    "date": 1704726523984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,39 +144,63 @@\n              AND\r\n              (jt.title_fa like ?)\r\n              AND\r\n              (jt.quantity like ?)\r\n-              AND\r\n-              (jt.product_id = ? OR product_id IS NOT NULL)\r\n+             AND\r\n+             (jt.product_id like ?) \r\n+             AND\r\n+             (jt.product_title_en like ?) \r\n+             AND\r\n+             (jt.brand like ?) \r\n+             AND\r\n+             (jt.category like ?) \r\n+             AND\r\n+             (jt.item_category2 like ?) \r\n+             AND\r\n+             (jt.item_category3 like ?) \r\n+             AND\r\n+             (jt.rrp_price like ?) \r\n+             AND\r\n+             (jt.selling_price like ?) \r\n+             AND\r\n+             (jt.discount_percent like ?) \r\n+             AND\r\n+             (jt.discount_percent like ?) \r\n+             AND\r\n+             (jt.is_promotion like ?) \r\n+             AND\r\n+             (jt.bnpl_active like ?) \r\n+             AND\r\n+             (jt.seller_id like ?)\r\n+             AND\r\n+             (jt.seller_title like ?)\r\n+             AND\r\n+             (jt.seller_code like ?)\r\n+             AND\r\n+             (jt.seller_id like ?)\r\n \r\n-             \r\n              ORDER BY ${sortColumn} ${sortType}\r\n              `;\r\n \r\n     let params = [\r\n       product_title_fa ? `%${product_title_fa}%` : `%`,\r\n       quantity ? `${quantity}` : `%`,\r\n-      //quantity ? `${quantity}` : `0 or quantity is not null`,\r\n-      //product_id ? `${product_id}` : `0 or product_id is not null`,\r\n-      //quantity ? `jt.quantity = ${quantity}` : `1=1`,\r\n-     \r\n-       //quantity ? `${quantity}`:`0` + ` 'or quantity is not null`,\r\n-      product_id = product_id ?? null,\r\n-\r\n-    //   product_title_en ? `%${product_title_en}%` : `%`,\r\n-    //   brand ? `%${brand}%` : `%`,\r\n-    //   category ? `%${category}%` : `%`,\r\n-    //   item_category2 ? `%${item_category2}%` : `%`,\r\n-    //   item_category3 ? `%${item_category3}%` : `%`,\r\n-    //   rrp_price ? `${rrp_price}` : `rrp_price`,\r\n-    //   selling_price ? `${selling_price}` : `selling_price`,\r\n-    //   discount_percent ? `${discount_percent}` : `discount_percent`,\r\n-    //   is_incredible ? `${is_incredible}` : `is_incredible`,\r\n-    //   is_promotion ? `${is_promotion}` : `is_promotion`,\r\n-    //   bnpl_active ? `${bnpl_active}` : `bnpl_active`,\r\n-    //   seller_id ? `${seller_id}` : `seller_id`,\r\n-    //   seller_title ? `%${seller_title}%` : `%`,\r\n-    //   seller_code ? `${seller_code}` : `seller_code`,\r\n+      product_id ? `${product_id}` : `%`,\r\n+      product_title_en ? `%${product_title_en}%` : `%`,\r\n+      brand ? `%${brand}%` : `%`,\r\n+      category ? `%${category}%` : `%`,\r\n+      item_category2 ? `%${item_category2}%` : `%`,\r\n+      item_category3 ? `%${item_category3}%` : `%`,\r\n+      rrp_price ? `${rrp_price}` : `%`,\r\n+      selling_price ? `${selling_price}` : `%`,\r\n+      discount_percent ? `${discount_percent}` : `%`,\r\n+      discount_percent ? `${is_incredible}` : `%`,\r\n+      is_promotion ? `${is_promotion}` : `%`,\r\n+      bnpl_active ? `${bnpl_active}` : `%`,\r\n+      seller_id ? `${seller_id}` : `%`,\r\n+      seller_title ? `%${seller_title}%` : `%`,\r\n+      seller_code ? `${seller_code}` : `%`,\r\n+       seller_id ?  `${seller_id}` : `%`,\r\n       sortColumn,\r\n       sortType,\r\n     ];\r\n \r\n"
                },
                {
                    "date": 1704726599421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,9 @@\n              (jt.quantity like ?)\r\n              AND\r\n              (jt.product_id like ?) \r\n              AND\r\n-             (jt.product_title_en like ?) \r\n+             (jt.title_en like ?) \r\n              AND\r\n              (jt.brand like ?) \r\n              AND\r\n              (jt.category like ?) \r\n"
                },
                {
                    "date": 1704726721522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,48 +9,8 @@\n     @InjectRepository(OrderItem)\r\n     private readonly orderItemRepository: Repository<OrderItem>,\r\n   ) {}\r\n \r\n-  async get_orderItems2(itemCategory2: string): Promise<ObjectLiteral[]> {\r\n-    const query = this.orderItemRepository\r\n-      .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n-      .from(\r\n-        (subQuery) =>\r\n-          subQuery\r\n-            .select(\r\n-              `jt.id AS order_item_id,\r\n-            jt.quantity AS order_item_quantity,\r\n-            jt.product_id AS product_id,`,\r\n-            )\r\n-            .from('orders', 'orders')\r\n-            .addFrom(\r\n-              `JSON_TABLE(\r\n-              order_content,\r\n-              '$.order_item[*]'\r\n-              COLUMNS (\r\n-                  id INT PATH '$.id',\r\n-                  quantity INT PATH '$.quantity',\r\n-                  product_id INT PATH '$.product.id'\r\n-              \r\n-          ) AS jt`,\r\n-              'jt',\r\n-            ),\r\n-        'OrderItem', // use the OrderItem alias\r\n-      )\r\n-      .select('OrderItem.*'); // use the OrderItem alias\r\n-\r\n-    // Add conditions based on the query parameters\r\n-    if (itemCategory2) {\r\n-      query.andWhere('OrderItem.product_item_category2 = :item_category2', {\r\n-        itemCategory2,\r\n-      });\r\n-    }\r\n-\r\n-    // Execute the query and get the result\r\n-    const result = await query.getRawMany();\r\n-    return result;\r\n-  }\r\n-\r\n   async get_orderItems1(itemCategory2: string): Promise<OrderItem[]> {\r\n     const query = this.orderItemRepository\r\n       .createQueryBuilder('OrderItem') // use the OrderItem alias\r\n       .select('OrderItem.id', 'order_item_id')\r\n@@ -198,9 +158,9 @@\n       bnpl_active ? `${bnpl_active}` : `%`,\r\n       seller_id ? `${seller_id}` : `%`,\r\n       seller_title ? `%${seller_title}%` : `%`,\r\n       seller_code ? `${seller_code}` : `%`,\r\n-       seller_id ?  `${seller_id}` : `%`,\r\n+      seller_id ? `${seller_id}` : `%`,\r\n       sortColumn,\r\n       sortType,\r\n     ];\r\n \r\n@@ -211,133 +171,4 @@\n     );\r\n     return orderItems;\r\n   }\r\n }\r\n-// }async get_orderItems(itemCategory2: string): Promise<OrderItem[]> {\r\n-//     const orderItems = await this.orderItemRepository.query(\r\n-//       `SELECT\r\n-//       jt.id AS order_item_id,\r\n-//     jt.quantity AS order_item_quantity,\r\n-//     jt.product_id AS product_id,\r\n-//     jt.title_fa AS product_title_fa,\r\n-//     jt.title_en AS product_title_en,\r\n-//     jt.url_uri AS product_url_uri,\r\n-//     jt.status AS product_status,\r\n-//     jt.brand AS product_brand,\r\n-//     jt.category AS product_category,\r\n-//     jt.dimension20 AS product_dimension20,\r\n-//     jt.item_category2 AS product_item_category2,\r\n-//     jt.item_category3 AS product_item_category3,\r\n-//     jt.storage_ids AS product_image_storage_ids,\r\n-//     jt.url AS product_image_url,\r\n-//     jt.rrp_price AS price_rrp_price,\r\n-//     jt.selling_price AS price_selling_price,\r\n-//     jt.discount_percent AS price_discount_percent,\r\n-//     jt.is_incredible AS price_is_incredible,\r\n-//     jt.is_promotion AS price_is_promotion,\r\n-//     jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n-//     jt.bnpl_active AS price_bnpl_active,\r\n-//     jt.variant_id AS variant_id,\r\n-//     jt.seller_id AS seller_id,\r\n-//     jt.seller_title AS seller_title,\r\n-//     jt.seller_code AS seller_code,\r\n-//     jt.seller_url AS seller_url\r\n-//       FROM orders,\r\n-//            JSON_TABLE(\r\n-//                order_content,\r\n-//                '$.order_item[*]'\r\n-//                COLUMNS (\r\n-//                 id INT PATH '$.id',\r\n-//                 quantity INT PATH '$.quantity',\r\n-//                 product_id INT PATH '$.product.id',\r\n-//                 title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n-//                 title_en NVARCHAR(255) PATH '$.product.title_en',\r\n-//                 url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n-//                 status NVARCHAR(255) PATH '$.product.status',\r\n-//                 brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n-//                 category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n-//                 dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n-//                 item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-//                 item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n-//                 storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n-//                 url JSON PATH '$.product.images.main.url',\r\n-//                 rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n-//                 selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n-//                 discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n-//                 is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n-//                 is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n-//                 is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n-//                 bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n-//                 variant_id INT PATH '$.variant.id',\r\n-//                 seller_id INT PATH '$.variant.seller.id',\r\n-//                 seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n-//                 seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n-//                 seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n-//                )\r\n-//            ) AS jt;`,\r\n-//       //{ type: QueryTypes.RAW }\r\n-//     );\r\n-\r\n-//     return orderItems;\r\n-//   }\r\n-// }\r\n-\r\n-// SELECT\r\n-//     jt.id AS order_item_id,\r\n-//     jt.quantity AS order_item_quantity,\r\n-//     jt.product_id AS product_id,\r\n-//     jt.title_fa AS product_title_fa,\r\n-//     jt.title_en AS product_title_en,\r\n-//     jt.url_uri AS product_url_uri,\r\n-//     jt.status AS product_status,\r\n-//     jt.brand AS product_brand,\r\n-//     jt.category AS product_category,\r\n-//     jt.dimension20 AS product_dimension20,\r\n-//     jt.item_category2 AS product_item_category2,\r\n-//     jt.item_category3 AS product_item_category3,\r\n-//     jt.storage_ids AS product_image_storage_ids,\r\n-//     jt.url AS product_image_url,\r\n-//     jt.rrp_price AS price_rrp_price,\r\n-//     jt.selling_price AS price_selling_price,\r\n-//     jt.discount_percent AS price_discount_percent,\r\n-//     jt.is_incredible AS price_is_incredible,\r\n-//     jt.is_promotion AS price_is_promotion,\r\n-//     jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n-//     jt.bnpl_active AS price_bnpl_active,\r\n-//     jt.variant_id AS variant_id,\r\n-//     jt.seller_id AS seller_id,\r\n-//     jt.seller_title AS seller_title,\r\n-//     jt.seller_code AS seller_code,\r\n-//     jt.seller_url AS seller_url\r\n-// FROM orders,\r\n-// JSON_TABLE(\r\n-//     order_content,\r\n-//     '$.order_item[*]'\r\n-//     COLUMNS (\r\n-//         id INT PATH '$.id',\r\n-//         quantity INT PATH '$.quantity',\r\n-//         product_id INT PATH '$.product.id',\r\n-//         title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n-//         title_en NVARCHAR(255) PATH '$.product.title_en',\r\n-//         url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n-//         status NVARCHAR(255) PATH '$.product.status',\r\n-//         brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n-//         category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n-//         dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n-//         item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n-//         item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n-//         storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n-//         url JSON PATH '$.product.images.main.url',\r\n-//         rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n-//         selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n-//         discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n-//         is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n-//         is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n-//         is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n-//         bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n-//         variant_id INT PATH '$.variant.id',\r\n-//         seller_id INT PATH '$.variant.seller.id',\r\n-//         seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n-//         seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n-//         seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n-//     )\r\n-// ) AS jt;\r\n"
                },
                {
                    "date": 1704796872129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,8 +96,9 @@\n                   bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n                   seller_id INT PATH '$.variant.seller.id',\r\n                   seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n                   seller_code NVARCHAR(255) PATH '$.variant.seller.code'\r\n+                  seller_url NVARCHAR(255) PATH '$.variant.seller.seller_url'\r\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n"
                },
                {
                    "date": 1704796880539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,10 @@\n         jt.is_promotion AS is_promotion,\r\n         jt.bnpl_active AS bnpl_active,\r\n         jt.seller_id AS seller_id,\r\n         jt.seller_title AS seller_title,\r\n-        jt.seller_code AS seller_code\r\n+        jt.seller_code AS seller_code,\r\n+        jt.seller_url AS seller_url\r\n         FROM orders,\r\n              JSON_TABLE(\r\n                  order_content,\r\n                  '$.order_item[*]'\r\n"
                },
                {
                    "date": 1704796909895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n                   is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n                   bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n                   seller_id INT PATH '$.variant.seller.id',\r\n                   seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n-                  seller_code NVARCHAR(255) PATH '$.variant.seller.code'\r\n+                  seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n                   seller_url NVARCHAR(255) PATH '$.variant.seller.seller_url'\r\n                  )\r\n              ) AS jt\r\n              WHERE \r\n"
                },
                {
                    "date": 1704797574676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n                   bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n                   seller_id INT PATH '$.variant.seller.id',\r\n                   seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n                   seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n-                  seller_url NVARCHAR(255) PATH '$.variant.seller.seller_url'\r\n+                  seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n                  )\r\n              ) AS jt\r\n              WHERE \r\n              1 = 1 \r\n"
                },
                {
                    "date": 1704888692206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,11 +88,11 @@\n                   brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n                   category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n                   item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n                   item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n-                  rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n-                  selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n-                  discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n+                  rrp_price DECIMAL(20, 0) PATH '$.price.rrp_price',\r\n+                  selling_price DECIMAL(20, 0) PATH '$.price.selling_price',\r\n+                  discount_percent DECIMAL(5, 0) PATH '$.price.discount_percent',\r\n                   is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n                   is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n                   bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n                   seller_id INT PATH '$.variant.seller.id',\r\n"
                }
            ],
            "date": 1704628588208,
            "name": "Commit-0",
            "content": "\r\n\r\n\r\n\r\nimport { Injectable, Logger } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { MoreThan, Repository } from 'typeorm';\r\nimport { O } from './entity/OrderItem'; // Replace with your entity model\r\nimport { PopulateOrderProductPriceExpensive, PopulateOrdersProductsMost, PopulateOrdersSellersMost, PopulateOrdersSummary, populateOrdersProductsCategoriesInfo } from './entity/entityAll';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class HamechidunService {\r\n  constructor(\r\n    @InjectRepository(TopSellingProduct)\r\n    private readonly topSellingProductRepository: Repository<OrderItem>\r\n  ) {}\r\nconst result = await this.orderItemRepository.query(\r\n    `SELECT \r\n      jt.id AS order_item_id,\r\n      jt.quantity AS order_item_quantity,\r\n      jt.product_id AS product_id,\r\n      jt.title_fa AS product_title_fa,\r\n      jt.title_en AS product_title_en,\r\n      jt.url_uri AS product_url_uri,\r\n      jt.status AS product_status,\r\n      jt.brand AS product_brand,\r\n      jt.category AS product_category,\r\n      jt.dimension20 AS product_dimension20,\r\n      jt.item_category2 AS product_item_category2,\r\n      jt.item_category3 AS product_item_category3,\r\n      jt.storage_ids AS product_image_storage_ids,\r\n      jt.url AS product_image_url,\r\n      jt.rrp_price AS price_rrp_price,\r\n      jt.selling_price AS price_selling_price,\r\n      jt.discount_percent AS price_discount_percent,\r\n      jt.is_incredible AS price_is_incredible,\r\n      jt.is_promotion AS price_is_promotion,\r\n      jt.is_locked_for_digiplus AS price_is_locked_for_digiplus,\r\n      jt.bnpl_active AS price_bnpl_active,\r\n      jt.variant_id AS variant_id,\r\n      jt.seller_id AS seller_id,\r\n      jt.seller_title AS seller_title,\r\n      jt.seller_code AS seller_code,\r\n      jt.seller_url AS seller_url\r\n  FROM orders,\r\n       JSON_TABLE(\r\n           order_content,\r\n           '$.order_item[*]'\r\n           COLUMNS (\r\n               id INT PATH '$.id',\r\n               quantity INT PATH '$.quantity',\r\n               product_id INT PATH '$.product.id',\r\n               title_fa NVARCHAR(255) PATH '$.product.title_fa',\r\n               title_en NVARCHAR(255) PATH '$.product.title_en',\r\n               url_uri NVARCHAR(255) PATH '$.product.url.uri',\r\n               status NVARCHAR(255) PATH '$.product.status',\r\n               brand NVARCHAR(255) PATH '$.product.data_layer.brand',\r\n               category NVARCHAR(255) PATH '$.product.data_layer.category',\r\n               dimension20 NVARCHAR(255) PATH '$.product.data_layer.dimension20',\r\n               item_category2 NVARCHAR(255) PATH '$.product.data_layer.item_category2',\r\n               item_category3 NVARCHAR(255) PATH '$.product.data_layer.item_category3',\r\n               storage_ids JSON PATH '$.product.images.main.storage_ids',\r\n               url JSON PATH '$.product.images.main.url',\r\n               rrp_price DECIMAL(10, 2) PATH '$.price.rrp_price',\r\n               selling_price DECIMAL(10, 2) PATH '$.price.selling_price',\r\n               discount_percent DECIMAL(5, 2) PATH '$.price.discount_percent',\r\n               is_incredible BOOLEAN PATH '$.price.is_incredible',\r\n               is_promotion BOOLEAN PATH '$.price.is_promotion',\r\n               is_locked_for_digiplus BOOLEAN PATH '$.price.is_locked_for_digiplus',\r\n               bnpl_active BOOLEAN PATH '$.price.bnpl_active',\r\n               variant_id INT PATH '$.variant.id',\r\n               seller_id INT PATH '$.variant.seller.id',\r\n               seller_title NVARCHAR(255) PATH '$.variant.seller.title',\r\n               seller_code NVARCHAR(255) PATH '$.variant.seller.code',\r\n               seller_url NVARCHAR(255) PATH '$.variant.seller.url'\r\n           )\r\n       ) AS jt;`,\r\n    { mapToEntity: OrderItem },\r\n  );"
        }
    ]
}