{
    "sourceFile": "src/digikala/proxy/proxy.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1702547284076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702709940476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,30 @@\n-import { HttpService, Injectable, Inject } from '@nestjs/common';\r\n-import { AxiosRequestConfig } from '@nestjs/axios';\r\n+// import { HttpService, Injectable, Inject } from '@nestjs/common';\r\n+// import { AxiosRequestConfig } from '@nestjs/axios';\r\n \r\n-@Injectable()\r\n-export class ProxyService {\r\n-  constructor(@Inject(HttpService) private httpService: HttpService) {}\r\n+// @Injectable()\r\n+// export class ProxyService {\r\n+//   constructor(@Inject(HttpService) private httpService: HttpService) {}\r\n \r\n-  async proxyRequest(config: AxiosRequestConfig) {\r\n-    // Rewrite the request path\r\n-    config.url = this.rewritePath(config.url);\r\n+//   async proxyRequest(config: AxiosRequestConfig) {\r\n+//     // Rewrite the request path\r\n+//     config.url = this.rewritePath(config.url);\r\n \r\n-    // Set the target URL as the base URL\r\n-    config.baseURL = 'https://api.digikala.com';\r\n+//     // Set the target URL as the base URL\r\n+//     config.baseURL = 'https://api.digikala.com';\r\n \r\n-    // Make the request using the HttpService\r\n-    try {\r\n-      const response = await this.httpService.request(config).toPromise();\r\n-      return response.data;\r\n-    } catch (error) {\r\n-      // Handle the error\r\n-      throw error;\r\n-    }\r\n-  }\r\n+//     // Make the request using the HttpService\r\n+//     try {\r\n+//       const response = await this.httpService.request(config).toPromise();\r\n+//       return response.data;\r\n+//     } catch (error) {\r\n+//       // Handle the error\r\n+//       throw error;\r\n+//     }\r\n+//   }\r\n \r\n-  rewritePath(path: string) {\r\n-    // Implement your logic to rewrite the path\r\n-    // For example, you can replace some segments or add some prefixes\r\n-    return path;\r\n-  }\r\n-}\r\n+//   rewritePath(path: string) {\r\n+//     // Implement your logic to rewrite the path\r\n+//     // For example, you can replace some segments or add some prefixes\r\n+//     return path;\r\n+//   }\r\n+// }\r\n"
                }
            ],
            "date": 1702547284076,
            "name": "Commit-0",
            "content": "import { HttpService, Injectable, Inject } from '@nestjs/common';\r\nimport { AxiosRequestConfig } from '@nestjs/axios';\r\n\r\n@Injectable()\r\nexport class ProxyService {\r\n  constructor(@Inject(HttpService) private httpService: HttpService) {}\r\n\r\n  async proxyRequest(config: AxiosRequestConfig) {\r\n    // Rewrite the request path\r\n    config.url = this.rewritePath(config.url);\r\n\r\n    // Set the target URL as the base URL\r\n    config.baseURL = 'https://api.digikala.com';\r\n\r\n    // Make the request using the HttpService\r\n    try {\r\n      const response = await this.httpService.request(config).toPromise();\r\n      return response.data;\r\n    } catch (error) {\r\n      // Handle the error\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  rewritePath(path: string) {\r\n    // Implement your logic to rewrite the path\r\n    // For example, you can replace some segments or add some prefixes\r\n    return path;\r\n  }\r\n}\r\n"
        }
    ]
}