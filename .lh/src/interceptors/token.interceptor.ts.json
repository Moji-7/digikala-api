{
    "sourceFile": "src/interceptors/token.interceptor.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1708233517589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708233545249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,7 @@\n+import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from \"@nestjs/common\";\r\n+import { tap } from \"rxjs\";\r\n+\r\n // token.interceptor.ts (modified)\r\n @Injectable()\r\n export class TokenInterceptor implements NestInterceptor {\r\n   constructor(private readonly tokenService: TokenService) {}\r\n"
                },
                {
                    "date": 1708233758775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,21 @@\n import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from \"@nestjs/common\";\r\n-import { tap } from \"rxjs\";\r\n+import { Observable, tap } from \"rxjs\";\r\n+import { TokenService } from \"./token.service\";\r\n \r\n-// token.interceptor.ts (modified)\r\n @Injectable()\r\n export class TokenInterceptor implements NestInterceptor {\r\n   constructor(private readonly tokenService: TokenService) {}\r\n \r\n   intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\r\n-    // ... (extract token from request)\r\n-    this.tokenService.setToken(token);\r\n+    const request = context.switchToHttp().getRequest(); // Get the request object\r\n+    const token = request.headers.authorization; // Extract token from headers\r\n \r\n+    this.tokenService.setToken(token); // Now you can use the token\r\n+\r\n     return next.handle().pipe(\r\n       tap(() => {\r\n-        // Remove token from service after request completion\r\n-        this.tokenService.setToken(null);\r\n+        this.tokenService.setToken(null); // Remove after request completion\r\n       }),\r\n     );\r\n   }\r\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1708233517589,
            "name": "Commit-0",
            "content": "// token.interceptor.ts (modified)\r\n@Injectable()\r\nexport class TokenInterceptor implements NestInterceptor {\r\n  constructor(private readonly tokenService: TokenService) {}\r\n\r\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\r\n    // ... (extract token from request)\r\n    this.tokenService.setToken(token);\r\n\r\n    return next.handle().pipe(\r\n      tap(() => {\r\n        // Remove token from service after request completion\r\n        this.tokenService.setToken(null);\r\n      }),\r\n    );\r\n  }\r\n}"
        }
    ]
}